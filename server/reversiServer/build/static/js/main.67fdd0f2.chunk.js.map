{"version":3,"sources":["sound/move.wav","sound/click.wav","sound/beep.wav","utils/jwtUtils.js","utils/serverCfg.js","utils/serverComm.js","components/LoginPage.js","components/Piece.js","reversiLogic/dumbAIs.js","reversiLogic/reversi.js","reversiLogic/minMaxAI.js","utils/timeHelper.js","components/Board.js","components/Nav.js","components/Stats.js","components/GamePage.js","components/CreateLobbyCard.js","components/BasicCard.js","components/AiCard.js","components/HomePage.js","components/Rules.js","components/RulesPage.js","components/AuthorCard.js","components/AboutPage.js","components/AccountsPrivacyCard.js","components/DeleteAccountCard.js","components/ChangePasswordCard.js","components/AccountPage.js","components/LandingPage.js","components/404Page.js","serviceWorker.js","index.js"],"names":["module","exports","JwtUtils","data","localStorage","setItem","access","refresh","removeItem","getItem","window","location","href","serverCfg","server","cors","serverComm","url","response","fetch","method","mode","cache","credentials","headers","getAccessToken","redirect","referrerPolicy","body","JSON","stringify","LoginPage","componentDidMount","checkJWTToken","setState","checkingToken","get","then","result","status","handleSubmit","event","preventDefault","state","signup","email","_","password","passwordConfirm","length","login","tryLoginOrSignUp","getTempToken","post","json","storeToken","onChange","e","target","id","value","_checkSignup","msg","checked","bind","postLocat","Promise","reject","catch","console","log","detail","className","onSubmit","this","type","placeholder","pwd1","role","htmlFor","Component","pieceVal","Piece","props","getOriginalColor","originalColor","setPiece","val","pieceColor","piece","hasPiece","removePiece","hasPieceAlready","color","rendeDetails","background","registration","row","col","onClick","action","GreedyAI","moves","best","ret","move","RandomAI","Object","keys","Math","floor","random","reversiLogic","grid","turn","setPlayers","playerArr","getPlayers","split","_initBoard","extremisPieces","initExtremisPiece","wouldBeFlippedPieces","getAvailableMoves","over","madeMoves","lastMove","whiteTimeLeft","blackTimeLeft","black","white","i","Array","j","push","remaining","blk","wht","moveKey","keyFromObj","toFlip","flipPieces","recomputeExtremePiece","normalNext","oppsitePiece","nextWouldbeFlipped","retObj","thisTurn","nextTurn","wouldbeFlipped","by","count","toTest","toTestKey","a","b","evalResult","computeDirectionalUntilRepeat","concat","iIter","jIter","otherType","inBetweenPieces","x","y","filled","getFilledSpaces","curRow","curCol","adj","z","_isCoordinateDup","_isCordValid","_isPiecePresent","splice","obj","key","parseInt","charAt","arr","_initPiece","MinMaxAlgo","gameSituation","depth","curGame","avail","getPossibleMovesAndFlip","maxOrMin","nextFavour","moveIdx","nextState","gameCpy","getDuplicateGrid","makeMove","getMinMaxMove","getTurn","score","computeBoardGoodness","board","favourability","timerHelper","second","min","sec","round","Board","getServerMoveLoop","okayToMove","removeHighlight","highlighted","square","origColor","gridRef","setBackGround","getAvail","availMoves","reversiGame","getAvailAndMark","registerPiece","pieceOutstanding","initBoard","pieceProps","handleClick","squareValue","placePieceSound","Audio","boardClickSound","play","placeClickSound","clickSound","gameDetails","reversi","moveStartAct","moveEndAct","setTime","updateStats","moveAct","aiDiff","okayToRender","moveId","overCounter","blockServerUpdate","toRender","postMoveActions","r","setTimeout","getAiMove","postMoveHumanHelp","makeServerMove","game","users","blackTimeleft","convertSecondMin","whiteTimeleft","setTimeRemain","objFromKey","serverMoved","lastTurn","reRenderGrid","setGrid","setTurn","triggerRecompute","serverTurnIdx","you","setServerOver","time","idx","flipBulkPieces","aiTurn","aiMove","minMaxStat","getOver","getRandomMove","getGreedyMove","moveObj","flipTo","Nav","__handleLogout","__logout","deleteToken","aria-label","Stats","storeCachedState","cachedState","blackTime","whiteTime","whiteMinute","blackMinute","goHome","timerVis","gid","room","join","updateDetails","setPieceCount","opp","setOpp","setLastMove","winner","setWinner","startTime","startInterval","endTime","getElapsedTime","inCount","empty","timerRunning","secondaryTime","interval","setInterval","timerFunc","timerCounter","secondHand","elapsedMinute","clearInterval","won","winningPiece","someoneWon","winnerMsg","blackTurn","opponent","mov","style","width","aria-valuenow","aria-valuemin","aria-valuemax","Game","getOppStr","diff","pStr","handleMoveStart","timerStart","handleMoveEnd","timerEnd","handleTimeSet","timerSet","handleMoveAction","pieceCount","getPieceCount","gameOver","timeRemain","getTimeRemain","getMadeMoves","getLastMove","setCount","setGameWinner","incrementRegister","statsRegisterCount","boardVisible","func","handleTurn","handleCount","startTimer","endTimer","setTimer","handleOpp","checkTokenPresent","document","overflow","search","substr","isNaN","statsMan","CreateLobbyCard","handleGameStart","handleLeave","resetState","handleLobbyUpdate","handleJoin","invalidRoom","getElementById","started","includes","handleCreate","playerB","playerW","inLobby","compMounted","readyToStart","runLobbyCheckLoop","pArr","me","pB","pW","undefined","disabled","aria-describedby","BasicCard","renderDetails","bigTitle","smallTitle","description","navMsg","AiCard","hrefEasy","navMsgEasy","hrefMed","navMsgMed","hrefHard","navMsgHard","HomePage","animationDelay","Rules","RulesPage","AuthorCard","src","imgUrl","alt","firstName","lastName","linkedInUrl","rel","gitUrl","AboutPage","AccountPrivacyCard","DeleteAccountCard","handleDelete","trim","delete","showSucc","showAlert","placeBeepSound","beepSound","handleChange","show","doneShow","hideAlert","errMsg","ChangePassword","handlePassChange","newP1","newP2","showErr","oldP","put","resp","resetFields","hideBoth","AccountsPage","LandingPage","backgroundColor","borderColor","Page404","Boolean","hostname","match","ReactDOM","render","StrictMode","exact","path","component","GamePage","AccountPage","navigator","serviceWorker","ready","unregister","error","message"],"mappings":"gKAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,2QCyB5BC,G,8GArBOC,GACdC,aAAaC,QALJ,QAKsBF,EAAKG,QACpCF,aAAaC,QALF,eAKsBF,EAAKI,W,oCAItCH,aAAaI,WAVJ,SAWTJ,aAAaI,WAVF,kB,0CAc4B,OAAnCJ,aAAaK,QAfR,UAe2E,OAArCL,aAAaK,QAdjD,kBAePC,OAAOC,SAASC,KAAO,O,uCAK3B,OAAOR,aAAaK,QArBX,a,6BCKFI,EALG,CACdC,OAAQ,GACRC,KAAM,QC8EKC,E,2OA5EOb,E,+BAAO,GAAIc,E,uBACnBC,EAAWC,MAAM,GAAD,OAAIN,EAAUC,QAAd,OAAuBG,GAAO,CAClDG,OAAQ,OACRC,KAAMR,EAAUE,KAChBO,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtB,EAASuB,mBAEnCC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU3B,K,kBAEhBe,G,oKAIQD,G,8EAETC,EAAWC,MAAM,GAAD,OAAIN,EAAUC,QAAd,OAAuBG,GAAO,CAClDG,OAAQ,MACRC,KAAMR,EAAUE,KAChBO,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtB,EAASuB,mBAEnCC,SAAU,SACVC,eAAgB,gB,kBAEXT,G,wKAGWf,EAAMc,G,8EAElBC,EAAWC,MAAM,GAAD,OAAIN,EAAUC,QAAd,OAAuBG,GAAO,CAClDG,OAAQ,SACRC,KAAMR,EAAUE,KAChBO,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtB,EAASuB,mBAEnCC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU3B,K,kBAEhBe,G,uKAGQf,EAAMc,G,8EAEfC,EAAWC,MAAM,GAAD,OAAIN,EAAUC,QAAd,OAAuBG,GAAO,CAClDG,OAAQ,MACRC,KAAMR,EAAUE,KAChBO,MAAO,WACPC,YAAa,cACbC,QAAS,CACP,eAAgB,mBAChB,OAAU,mBACV,cAAgB,OAAhB,OAAwBtB,EAASuB,mBAEnCC,SAAU,SACVC,eAAgB,cAChBC,KAAMC,KAAKC,UAAU3B,K,kBAEhBe,G,2GCyEAa,E,kDA9Ib,aAAe,IAAD,8BACZ,gBAeFC,kBAAoB,WAClB,EAAKC,iBAjBO,EAoBdA,cAAgB,WACd,EAAKC,SAAS,CACZC,eAAe,IAGjBnB,EAAWoB,IADK,eAEfC,MAAK,SAACC,GACiB,MAAlBA,EAAOC,OACT7B,OAAOC,SAASC,KAAO,QAEvB,EAAKsB,SAAS,CACZC,eAAe,QA/BT,EAqCdK,aAAe,SAACC,GACdA,EAAMC,iBADkB,MAG8B,EAAKC,MAApDC,EAHiB,EAGjBA,OAAWC,GAHM,EAGTC,EAHS,EAGND,OAAOE,EAHD,EAGCA,SAAUC,EAHX,EAGWA,gBAEnC,GAAID,EAASE,OAAS,EAAtB,CAEE,EAAKf,SAAS,CACZgB,MAFQ,6BAMZ,GAAKH,IAAaC,GAAmBJ,EAArC,CAEE,EAAKV,SAAS,CACZgB,MAFQ,4BAMZ,EAAKC,iBAAiBP,EAAQC,EAAOE,IAxDzB,EA2DdK,aAAe,WAEbpC,EAAWqC,KAAK,GADA,oBACehB,MAAK,SAACC,GAAY,OAAOA,EAAOgB,UAC9DjB,MAAK,SAACC,GACLpC,EAASqD,WAAWjB,GACpB5B,OAAOC,SAASC,KAAO,YAhEb,EAoGd4C,SAAW,SAACC,GACV,EAAKvB,SAAL,eAAiBuB,EAAEC,OAAOC,GAAKF,EAAEC,OAAOE,SArG5B,EAwGdC,aAAe,SAACJ,GACd,IAAIK,EAAM,UAENL,EAAEC,OAAOK,UACXD,EAAM,YAGR,EAAK5B,SAAS,CACZU,OAAQa,EAAEC,OAAOK,QACjBb,MAAOY,KA/GT,EAAKnB,MAAQ,CACXC,QAAQ,EACRM,MAAO,UACPL,MAAO,GACPE,SAAU,GACVC,gBAAiB,GACjBb,eAAe,GAGhB,EAAKK,aAAe,EAAKA,aAAawB,KAAlB,gBACpB,EAAK/B,cAAgB,EAAKA,cAAc+B,KAAnB,gBAZV,E,6DAoEGpB,EAAQC,EAAOE,GAAU,IAAD,OACnCkB,EAAarB,EAAU,oBAAsB,qBAC7CzC,EAAO,CACT,SAAY0C,EACZ,MAASA,EACT,SAAYE,GAEd/B,EAAWqC,KAAKlD,EAAM8D,GACrB5B,MAAK,SAAAC,GACJ,OAAIA,EAAOC,QAAU,KAAOD,EAAOC,OAAS,IACnCD,EAAOgB,OAETY,QAAQC,OAAO7B,EAAOgB,WAE9BjB,MAAK,SAACC,GACAM,EAIH,EAAKO,kBAAkBP,EAAQC,EAAOE,IAHtC7C,EAASqD,WAAWjB,GACpB5B,OAAOC,SAASC,KAAO,YAK1BwD,OAAM,SAAC9B,GACN+B,QAAQC,IAAIhC,GACZA,EAAOD,MAAK,SAACC,GACX,EAAKJ,SAAS,CACZgB,MAAOZ,EAAOiC,iB,+BAwBpB,OACE,6BACI,yBAAKC,UAAU,qBACZ,0BAAMA,UAAU,4FAA4FC,SAAUC,KAAKlC,cACxH,uBAAGgC,UAAU,eAAb,WACA,uBAAGA,UAAU,iBAAiBE,KAAK/B,MAAMO,OACzC,2BAAOyB,KAAK,QAAQhB,GAAG,QAAQa,UAAU,oBAAoBI,YAAY,SAAShB,MAAOc,KAAK/B,MAAME,MAAOW,SAAUkB,KAAKlB,WAC1H,2BAAOmB,KAAK,WAAWhB,GAAG,WAAWa,UAAU,oBAAoBI,YAAY,WAAWhB,MAAOc,KAAK/B,MAAMkC,KAAMrB,SAAUkB,KAAKlB,WAChIkB,KAAK/B,MAAMC,QAAU,2BAAO+B,KAAK,WAAWhB,GAAG,kBAAkBa,UAAU,oBAAoBI,YAAY,mBAAmBhB,MAAOc,KAAK1B,gBAAiBQ,SAAUkB,KAAKlB,YACzKkB,KAAK/B,MAAMR,eAAiB,4BAAQqC,UAAU,8BAA8BG,KAAK,UAArD,cAC7BD,KAAK/B,MAAMR,eAAiB,yBAAKqC,UAAU,iBAAiBM,KAAK,UAAS,0BAAMN,UAAU,WAAhB,eAC3E,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,kCACX,2BAAOG,KAAK,WAAWnB,SAAUkB,KAAKb,aAAcW,UAAU,uBAAuBb,GAAG,SAASI,QAASW,KAAK/B,MAAMC,SACrH,2BAAO4B,UAAU,uBAAuBO,QAAQ,UAAhD,gC,GArIAC,aCHlBC,G,MACK,GADLA,EAEK,EAFLA,EAGK,EAILC,E,kDACJ,WAAYC,GAAQ,IAAD,uBACjB,cAAMA,IAkBRC,iBAAmB,WACjB,OAAO,EAAKzC,MAAM0C,eApBD,EAuBnBC,SAAW,SAACC,GACV,IAAIC,EAAcD,IAAQN,EAAkB,aAAc,aAC1D,EAAK/C,SAAS,CACVuD,MAAOF,EACPG,UAAW,EACXF,WAAYA,KA5BC,EAgCnBG,YAAc,WACZ,EAAKzD,SAAS,CACVuD,MAAOR,EACPS,UAAW,EACXF,WAAY,gBApCC,EAwCnBI,gBAAkB,WAChB,OAAO,EAAKjD,MAAM+C,UAvClB,IAAIG,EAAQ,EAAKV,MAAMW,aAAaC,WAAa,aAAc,aAC3DP,EAAa,EAAKL,MAAMW,aAAaL,QAAUR,EAAiB,aAAc,aAHjE,OAKjB,EAAKtC,MAAQ,CACTkD,MAAOA,EACPR,cAAeQ,EACfH,SAAU,EAAKP,MAAMW,aAAaJ,SAClCD,MAAO,EAAKN,MAAMW,aAAaL,MAC/BD,WAAYA,GAVC,E,gEAgBjBd,KAAKS,MAAMW,aAAaE,aAAatB,KAAKS,MAAMW,aAAaG,IAAKvB,KAAKS,MAAMW,aAAaI,IAAKxB,Q,oCA4BnFqB,GACZrB,KAAKxC,SAAS,CACZ2D,MAAOE,M,+BAKF,IAAD,OACFL,EAAWhB,KAAK/B,MAAM+C,SAC1B,OACE,yBAAKlB,UAAS,oBAAeE,KAAK/B,MAAMkD,OAASM,QAAS,SAAA1C,GAAC,OAAI,EAAK0B,MAAMW,aAAaM,OAAO3C,EAAG,EAAK0B,MAAMW,aAAaG,IAAK,EAAKd,MAAMW,aAAaI,IAAK,KACxJR,GAAY,yBAAKlB,UAAS,iBAAYE,KAAK/B,MAAM6C,mB,GAxDtCR,aCVdqB,E,2GACgBC,GACpB,IAAIC,EAAO,EACPC,EAAM,KACV,IAAK,IAAIC,KAAQH,EACZA,EAAMG,GAAMxD,OAASsD,IACxBA,EAAOD,EAAMG,GAAMxD,OACnBuD,EAAMC,GAGR,OAAOD,M,KAIHE,E,2GACgBJ,GACpB,OAAOK,OAAOC,KAAKN,GAAOO,KAAKC,MAAMD,KAAKE,SAASJ,OAAOC,KAAKN,GAAOrD,a,aCyYzD+D,E,WArZd,aAAsC,IAAD,OAAzBC,EAAyB,uDAAlB,KAAMC,EAAY,uDAAL,KAAK,yBAoCrCC,WAAa,SAACC,GACb,EAAKA,UAAYA,GArCmB,KAwCrCC,WAAa,WACZ,OAAuB,OAAnB,EAAKD,UACD,KAGsB,IAA1B,EAAKA,UAAUnE,OACZ,UAAN,OAAY,EAAKmE,UAAU,GAAGE,MAAM,KAAK,GAAzC,uBAAqD,EAAKF,UAAU,GAAGE,MAAM,KAAK,IAC9C,IAA1B,EAAKF,UAAUnE,OACnB,QAAN,OAAe,EAAKmE,UAAU,GAAGE,MAAM,KAAK,GAA5C,eADM,GA9CP5C,KAAKuC,KAAOA,EAEXvC,KAAKuC,KADO,OAATA,EACSD,EAAaO,aAEbN,EAGbvC,KAAK8C,eAAiB9C,KAAK+C,oBAE3B/C,KAAKwC,KAAOA,EACC,OAATA,IACHxC,KAAKwC,KAAOjC,GAGbP,KAAKgD,qBAAuBhD,KAAKiD,kBAAkBjD,KAAK8C,eAAgB9C,KAAKwC,MAC7ExC,KAAKkD,MAAO,EACZlD,KAAKmD,UAAY,EACjBnD,KAAKoD,SAAW,KAChBpD,KAAK0C,UAAY,KAEjB1C,KAAKqD,cAAgB,KACrBrD,KAAKsD,cAAgB,K,0DAGRC,EAAOC,GACpBxD,KAAKsD,cAAgBC,EACrBvD,KAAKqD,cAAgBG,I,sCAIrB,MAAO,CACND,MAAOvD,KAAKsD,cACZE,MAAOxD,KAAKqD,iB,oCAoBb,OAAOrD,KAAKoD,W,8BAGLb,GACPvC,KAAKuC,KAAOA,I,8BAGLC,GACPxC,KAAKwC,KAAOA,I,qCAIZ,OAAOxC,KAAKmD,Y,gCAIZ,OAAOnD,KAAKuC,O,yCAKZ,IADA,IAAIT,EAAM,GACD2B,EAAI,EAAGA,EAAIzD,KAAKuC,KAAKhE,OAAQkF,IAAI,CAEzC,IADA,IAAIlC,EAAM,IAAImC,MAAM,GACXC,EAAI,EAAGA,EAAI3D,KAAKuC,KAAKkB,GAAGlF,OAAQoF,IACxCpC,EAAIoC,GAAK3D,KAAKuC,KAAKkB,GAAGE,GAEvB7B,EAAI8B,KAAKrC,GAEV,OAAOO,I,gDAIP,OAAO9B,KAAKgD,uB,gCAIZ,OAAOhD,KAAKwC,O,yCAIZxC,KAAK8C,eAAiB9C,KAAK+C,oBAC3B/C,KAAKgD,qBAAuBhD,KAAKiD,kBAAkBjD,KAAK8C,eAAgB9C,KAAKwC,MAE7E,IADA,IAAIqB,EAAY,EACPJ,EAAI,EAAGA,EAAIzD,KAAKuC,KAAKhE,OAAQkF,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAI3D,KAAKuC,KAAKkB,GAAGlF,OAAQoF,IACpC3D,KAAKuC,KAAKkB,GAAGE,KAAOpD,IACvBsD,GAAa,GAIhB7D,KAAKmD,UAAY,GAAKU,I,gCAItB,OAAO7D,KAAKkD,O,sCAOZ,IAHA,IAAIY,EAAM,EACNC,EAAM,EAEDN,EAAI,EAAGA,EAAIzD,KAAKuC,KAAKhE,OAAQkF,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAI3D,KAAKuC,KAAKkB,GAAGlF,OAAQoF,IACpC3D,KAAKuC,KAAKkB,GAAGE,KAAOpD,EACvBuD,GAAO,EAEA9D,KAAKuC,KAAKkB,GAAGE,KAAOpD,IAC3BwD,GAAO,GAIV,MAAO,CAACR,MAAOO,EAAKN,MAAOO,K,sCAI3B/D,KAAKkD,MAAO,I,+BAGJnB,GACR,GAAI/B,KAAKkD,KACR,OAAO,KAGR,IAAIc,EAAU1B,EAAa2B,WAAWlC,GACtC,KAAIiC,KAAWhE,KAAKgD,sBAGnB,OAAO,KAFPhD,KAAKuC,KAAKR,EAAKR,KAAKQ,EAAKP,KAAOxB,KAAKwC,KAKtC,IAAI0B,EAAM,YAAOlE,KAAKgD,qBAAqBgB,IAE3ChE,KAAKmE,WAAWD,GAChBlE,KAAKoE,sBAAsBrC,EAAKR,IAAKQ,EAAKP,KAC1C,IAAI6C,EAAa/B,EAAagC,aAAatE,KAAKwC,MAC5C+B,EAAqBvE,KAAKiD,kBAAkBjD,KAAK8C,eAAgBuB,GAGtB,IAA3CpC,OAAOC,KAAKqC,GAAoBhG,QACnC8F,EAAarE,KAAKwC,KAClBxC,KAAKgD,qBAAuBhD,KAAKiD,kBAAkBjD,KAAK8C,eAAgBuB,GAClB,IAAlDpC,OAAOC,KAAKlC,KAAKgD,sBAAsBzE,SAC1CyB,KAAKkD,MAAO,IAGblD,KAAKgD,qBAAuBuB,EAG7B,IAAIC,EAAS,CACZC,SAAUzE,KAAKwC,KACfkC,SAAUL,EACVM,eAAe,YAAKT,IAarB,OAVAlE,KAAKoD,SAAW,CACfwB,GAAI5E,KAAKwC,KACTjB,IAAKQ,EAAKR,IACVC,IAAKO,EAAKP,IACVqD,MAAOL,EAAOG,eAAepG,QAE9ByB,KAAKmD,WAAa,EAElBnD,KAAKwC,KAAO6B,EAELG,I,iCAGGN,GACV,IAAK,IAAIT,EAAI,EAAGA,EAAIS,EAAO3F,OAAQkF,IAClCzD,KAAKuC,KAAK2B,EAAOT,GAAGlC,KAAK2C,EAAOT,GAAGjC,KAAOc,EAAagC,aAAatE,KAAKuC,KAAK2B,EAAOT,GAAGlC,KAAK2C,EAAOT,GAAGjC,Q,wCAIvFI,EAAOY,GAIxB,IAHA,IAAIsC,EAAS,KACT9B,EAAuB,GAElBjB,EAAO,EAAGA,EAAOH,EAAMrD,OAAQwD,IAAQ,CAC/C+C,EAASlD,EAAMG,GAEf,IADA,IAAIgD,EAAYzC,EAAa2B,WAAWa,GAC/BE,GAAK,EAAGA,GAAI,EAAGA,IACvB,IAAK,IAAIC,GAAK,EAAGA,GAAI,EAAGA,IACvB,GAAU,IAAND,GAAiB,IAANC,EAAS,CACvB,IAAIC,EAAalF,KAAKmF,8BAA8BL,EAAOvD,IAAKuD,EAAOtD,IAAKwD,EAAGC,EAAGzC,GAE9E0C,EAAW3G,OAAS,IAClByE,EAAqB+B,KACzB/B,EAAqB+B,GAAa,IAEnC/B,EAAqB+B,GAAa/B,EAAqB+B,GAAWK,OAAOF,KAM9E,OAAOlC,I,oDAIsBS,EAAGE,EAAG0B,EAAOC,EAAOrF,GACjD,IAAIsF,EAAYjD,EAAagC,aAAarE,GACtCuF,EAAkB,GAGtB,GAAK/B,EAAI4B,GAAS,GAAK5B,EAAI4B,EAAQ,GAAO1B,EAAI2B,GAAS,GAAK3B,EAAI2B,EAAQ,EACxE,CAGC,GAAItF,KAAKuC,KAAKkB,EAAE4B,GAAO1B,EAAE2B,KAAW/E,EACnC,MAAO,GAIR,GAAIP,KAAKuC,KAAKkB,EAAE4B,GAAO1B,EAAE2B,KAAWC,EAAW,CAG9CC,EAAgB5B,KACf,CACCrC,IAAKkC,EAAE4B,EACP7D,IAAKmC,EAAE2B,IAGT,IAAK,IAAIG,EAAIhC,EAAI,EAAE4B,EAAOK,EAAI/B,EAAI,EAAE2B,EAAQG,GAAK,GAAOA,GAAK,GAAOC,GAAK,GAAOA,GAAK,EAAID,GAAKJ,EAAOK,GAAKJ,EAAO,CAGhH,GAAKG,EAAI,GAAOA,EAAI,GAAOC,EAAI,GAAOA,EAAI,EACzC,MAAO,GAIR,GAAI1F,KAAKuC,KAAKkD,GAAGC,KAAOnF,EACvB,MAAO,GAGR,GAAIP,KAAKuC,KAAKkD,GAAGC,KAAOzF,EACvB,OAAOuF,EAGRA,EAAgB5B,KACf,CACCrC,IAAKkE,EACLjE,IAAKkE,MAQV,MAAO,K,0CAUP,IALA,IAAIC,EAAS3F,KAAK4F,kBACdC,EAAS,EACTC,EAAS,EACTC,EAAO,GAEFtC,EAAI,EAAGA,EAAGkC,EAAOpH,OAAQkF,IAAK,CACtCoC,EAASF,EAAOlC,GAAGlC,IACnBuE,EAASH,EAAOlC,GAAGjC,IACnB,IAAK,IAAIwE,EAAIH,EAAS,EAAGG,GAAMH,EAAS,EAAIG,IAC3C,IAAK,IAAIP,EAAIK,EAAS,EAAGL,GAAMK,EAAS,EAAIL,IACtCnD,EAAa2D,iBAAiBF,EAAKC,EAAGP,KAC1CnD,EAAa4D,aAAaF,EAAGP,IAC5BzF,KAAKmG,gBAAgBH,EAAGP,IACzBM,EAAInC,KACH,CACCrC,IAAKyE,EACLxE,IAAKiE,IAOX,OAAOM,I,4CAMctC,EAAGE,GACxB,IAAK,IAAIqC,EAAI,EAAGA,EAAIhG,KAAK8C,eAAevE,OAAQyH,IAC/C,GAAIhG,KAAK8C,eAAekD,GAAGzE,MAAQkC,GAAKzD,KAAK8C,eAAekD,GAAGxE,MAAQmC,EACvE,CACC3D,KAAK8C,eAAesD,OAAOJ,EAAG,GAC9B,MAIF,IAAK,IAAIA,EAAIvC,EAAI,EAAGuC,GAAMvC,EAAI,GAAMuC,GAAK,EAAGA,IAC3C,IAAK,IAAIP,EAAI9B,EAAI,EAAG8B,GAAM9B,EAAI,GAAM8B,GAAK,EAAGA,IACtCnD,EAAa2D,iBAAiBjG,KAAK8C,eAAgBkD,EAAGP,KAC1DnD,EAAa4D,aAAaF,EAAGP,IAC5BzF,KAAKmG,gBAAgBH,EAAGP,IACxBzF,KAAK8C,eAAec,KACnB,CACCrC,IAAKyE,EACLxE,IAAKiE,M,wCAUX,IADA,IAAI3D,EAAM,GACD2B,EAAI,EAAGA,EAAIzD,KAAKuC,KAAKhE,OAAQkF,IACrC,IAAK,IAAIE,EAAI,EAAGA,EAAI3D,KAAKuC,KAAKkB,GAAGlF,OAAQoF,IACpC3D,KAAKmG,gBAAgB1C,EAAEE,IAC1B7B,EAAI8B,KACH,CACCrC,IAAKkC,EACLjC,IAAKmC,IAMV,OAAO7B,I,sCAGQ2B,EAAGE,GAClB,OAAI3D,KAAKuC,KAAKkB,GAAGE,KAAOpD,GACvBP,KAAKuC,KAAKkB,GAAGE,KAAOpD,K,oCAOFQ,GACnB,OAAQA,IAAUR,EAAiBA,EAAgBA,I,iCAGlC8F,GACjB,MAAM,IAAN,OAAWA,EAAI9E,IAAf,YAAsB8E,EAAI7E,O,iCAGT8E,GAIjB,MAAO,CACN/E,IAJSgF,SAASD,EAAIE,OAAO,IAK7BhF,IAJS+E,SAASD,EAAIE,OAAO,O,uCAQPC,EAAKhD,EAAGE,GAC/B,IAAK,IAAIqC,EAAI,EAAGA,EAAIS,EAAIlI,OAAQyH,IAC/B,GAAIS,EAAIT,GAAGzE,MAAQkC,GAAKgD,EAAIT,GAAGxE,MAAQmC,EAEtC,OAAO,EAGT,OAAO,I,mCAGYF,EAAGE,GACtB,OAAIF,EAAI,GAAKA,GAAI,GAAKE,EAAI,GAAKA,GAAK,I,mCAWpC,IAHA,IAAIpB,EAAO,GAGFkB,EAAI,EAAGA,EAFQ,EAEeA,IAAK,CAC3ClB,EAAKkB,GAAK,GACV,IAAK,IAAIE,EAAI,EAAGA,EAJO,EAIgBA,IACtCpB,EAAKkB,GAAGE,GAAKpD,EAGf,OAAO+B,EAAaoE,WAAWnE,K,iCAGdA,GAKjB,OAJAA,EAAK,GAAG,GAAKhC,EACbgC,EAAK,GAAG,GAAKhC,EACbgC,EAAK,GAAG,GAAKhC,EACbgC,EAAK,GAAG,GAAKhC,EACNgC,M,KChVMoE,E,oJA/DaC,EAAeC,EAAOrE,G,wFAC5CsE,EAAU,IAAIxE,EAAasE,EAAepE,GAC1CuE,EAAQD,EAAQE,0BAChBC,EAAW,GAGZzE,IAASjC,IACX0G,GAAY,IAGTC,EAAa,EACbC,EAAU,KACVC,EAAY,OAEZP,EAAQ,G,+BACKE,G,qDAAPT,E,WACJe,EAAUP,EAAQQ,oBACtBF,EAAY,IAAI9E,EAAa+E,EAAS7E,IAC5B+E,SAASR,EAAMT,I,UACNK,EAAWa,cAAcJ,EAAUE,mBAAqBT,EAAQ,EAAIO,EAAUK,W,QACjGP,GADAA,E,QACwBQ,OAGpBlF,IAASjC,GAAkB2G,GAAcD,GAGlCzE,IAASjC,GAAkB2G,GAAcD,KAFnDA,EAAWC,EACXC,EAAUb,G,wEAQL,CACLoB,MAAOf,EAAWgB,qBAAqBf,K,iCAInC,CACLc,MAAOT,EACPlF,KAAMoF,I,kJAImBS,GAG3B,IAFA,IAAIC,EAAgB,EAEXpE,EAAI,EAAGA,EAAImE,EAAMrJ,OAAQkF,IACjC,IAAK,IAAIE,EAAI,EAAGA,EAAIiE,EAAMnE,GAAGlF,OAAQoF,IAChCiE,EAAMnE,GAAGE,KAAOpD,IAETqH,EAAMnE,GAAGE,KAAOpD,EAC1BsH,IACUD,EAAMnE,GAAGE,KAAOpD,GAC1BsH,KAKH,OAAOA,M,KC7CMC,G,oHAnBaC,GAChBA,EAAS,IACTA,EAAS,GAMb,MAAO,CACHC,IAHM7F,KAAKC,MAAM2F,EADJ,IAKbE,IAHM9F,KAAK+F,MAAMH,EAFJ,O,0CASMC,GACvB,OAAe,GAARA,EAAIA,IAASA,EAAIC,Q,wCCkWjBE,E,kDAlWT,WAAY1H,GAAQ,IAAD,uBACjB,cAAMA,IAgCRnD,kBAAoB,WACA,IAAd,EAAKX,KACP,EAAKyL,oBAEL,EAAKC,YAAa,GArCH,EA8PnBC,gBAAkB,WAChB,IAAK,IAAI7E,EAAI,EAAGA,EAAI,EAAK8E,YAAYhK,OAAQkF,IAAI,CAC/C,IAAI+E,EAAS,EAAKD,YAAY9E,GAC1BgF,EAAa,EAAKC,QAAQF,EAAOjH,KAAKiH,EAAOhH,KAAKd,mBACtD,EAAKgI,QAAQF,EAAOjH,KAAKiH,EAAOhH,KAAKmH,cAAcF,KAlQpC,EAsQnBG,SAAW,WACT,EAAKC,WAAa,EAAKC,YAAY9B,2BAvQlB,EA0QnB+B,gBAAkB,WAEhB,IAAK,IAAIzC,KADT,EAAKuC,WAAa,EAAKC,YAAY9B,0BACnB,EAAK6B,WAAW,CAC9B,IAAItH,EAAMgF,SAASD,EAAIE,OAAO,IAC1BhF,EAAM+E,SAASD,EAAIE,OAAO,IAC9B,EAAKkC,QAAQnH,GAAKC,GAAKmH,cAAc,eACrC,EAAKJ,YAAY3E,KACf,CACErC,IAAKA,EACLC,IAAKA,MAnRM,EAyRnBwH,cAAgB,SAACvF,EAAGE,EAAG0C,GACrB,EAAKqC,QAAQjF,GAAGE,GAAK0C,EACrB,EAAK4C,kBAAoB,EAEK,IAA1B,EAAKA,kBACP,EAAKF,mBA9RU,EAkSnBG,UAAY,SAACzD,EAAEC,GAIb,IAHA,IAAInD,EAAO,GACPhB,EAAM,GACNF,GAAa,EACRoC,EAAI,EAAGA,EAAIgC,EAAGhC,IAAI,CACvB,IAAK,IAAIE,EAAI,EAAGA,EAAI+B,EAAG/B,IAAI,CACzB,IAAI5C,EAAQR,EACRS,GAAW,GACL,IAALyC,GAAc,IAAJE,GAAiB,IAANF,GAAe,IAAJE,KAAQ5C,EAAQR,EAAgBS,GAAW,IACtE,IAALyC,GAAc,IAAJE,GAAiB,IAANF,GAAe,IAAJE,KAAQ5C,EAAQR,EAAgBS,GAAW,GAEhF,IAAImI,EAAa,CACf9H,WAAYA,EACZN,MAAOA,EACPC,SAAUA,EACVO,IAAKkC,EACLjC,IAAKmC,EACLjC,OAAQ,EAAK0H,YACb9H,aAAc,EAAK0H,eAIrBzH,EAAIqC,KAAK,kBAAC,EAAD,CAAO0C,IAAG,WAAM7C,EAAN,YAAWE,GAAKvC,aAAc+H,KACjD9H,GAAcA,EAElBA,GAAcA,EACdkB,EAAKqB,KAAK,yBAAK0C,IAAG,WAAM7C,GAAI3D,UAAW,kBAAmByB,EAAhD,MACV,EAAKmH,QAAQ9E,KAAK,IAAIF,MAAM,IAC5BnC,EAAM,GAER,OAAOgB,GAhUU,EAmUnB3B,SAAW,SAACC,GACV,EAAKrD,SAAS,CACV6L,YAAaxI,KArUA,EAyUnByI,gBAAiB,WACE,IAAIC,MAAOC,KACjBC,QA3UM,EA8UnBC,gBAAiB,WACH,IAAIH,MAAOI,KACjBF,QA9UN,EAAKL,YAAc,EAAKA,YAAY9J,KAAjB,gBACnB,EAAKgK,gBAAkB,EAAKA,gBAAgBhK,KAArB,gBACvB,EAAKoK,gBAAkB,EAAKA,gBAAgBpK,KAArB,gBACvB,EAAK8I,kBAAoB,EAAKA,kBAAkB9I,KAAvB,gBAEzB,EAAKoJ,QAAU,GACf,IAAInG,EAAO,EAAK2G,UAAU,EAAE,GARX,OASjB,EAAKX,YAAc,GACnB,EAAKM,WAAa,GAClB,EAAKC,YAAc,EAAKrI,MAAMmJ,YAAYC,QAC1C,EAAKC,aAAe,EAAKrJ,MAAMmJ,YAAYE,aAC3C,EAAKC,WAAa,EAAKtJ,MAAMmJ,YAAYG,WACzC,EAAKC,QAAU,EAAKvJ,MAAMmJ,YAAYI,QAGtC,EAAKC,YAAc,EAAKxJ,MAAMmJ,YAAYM,QAC1C,EAAKvN,KAAO,EAAK8D,MAAMmJ,YAAYO,OAGnC,EAAKlM,MAAQ,CACTsE,KAAMA,EACN6H,aAA6B,IAAd,EAAKzN,MAGxB,EAAKuG,MAAO,EACZ,EAAKmH,OAAS,EACd,EAAKpB,iBAAmB,GACxB,EAAKqB,YAAc,EACnB,EAAKC,mBAAoB,EA9BR,E,iGAyCDxL,EAAG0E,EAAGE,EAAG5C,G,4EACrByJ,EAAWxK,KAAK8I,YAAYrB,WAE5BzH,KAAKkD,MAASlD,KAAKqI,W,oDAIvBrI,KAAKuK,mBAAoB,EAGN,IAAdvK,KAAKrD,MAA4B,IAAdqD,KAAKrD,MAA4B,IAAdqD,KAAKrD,MAAe6N,IAAajK,E,oDAIxEwB,EAAO,CACTR,IAAKkC,EACLjC,IAAKmC,GAGiC,OAApC3D,KAAK8I,YAAYvB,SAASxF,G,wBAC5B/B,KAAKsI,kBACLtI,KAAKiK,cACLjK,KAAKsJ,kB,UACCtJ,KAAKyK,gBAAgB1I,EAArB,WAA+B0B,EAA/B,YAAoCE,GAAK6G,G,WAE7B,IAAdxK,KAAKrD,MAA4B,IAAdqD,KAAKrD,K,kCACpB,IAAI6C,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,QACrC1K,KAAK4K,Y,wBACkB,IAAd5K,KAAKrD,KACdqD,KAAK6K,oBACiB,IAAd7K,KAAKrD,MACbqD,KAAK8K,eAAe/I,G,mRAOR,gCAChBzF,EAAWoB,IADK,iCAEfC,MAAK,SAAAC,GACJ,OAAIA,EAAOC,QAAU,KAAOD,EAAOC,OAAS,IACnCD,EAAOgB,OAETY,QAAQC,OAAO7B,EAAOgB,WAE9BjB,MAAK,SAACC,GASL,GARA,EAAKyK,YAAa,EAEdzK,EAAOmN,KAAKC,MAAMzM,QAAU,GAC9B,EAAKf,SAAS,CACZ4M,cAAc,IAId,EAAKG,kBACP,EAAKA,mBAAoB,MAD3B,CAKA,EAAKzB,YAAYrG,WAAW7E,EAAOmN,KAAKC,OACxC,EAAK9H,KAAOtF,EAAOmN,KAAK7H,KAIxB,IAAI+H,EAAgBnD,EAAYoD,iBAAiBtN,EAAOmN,KAAKzH,eACzD6H,EAAgBrD,EAAYoD,iBAAiBtN,EAAOmN,KAAK1H,eAK7D,GAHA,EAAK2G,QAAQiB,EAAeE,GAC5B,EAAKrC,YAAYsC,cAAcH,EAAeE,GAE1CvN,EAAOmN,KAAKhJ,OAAS,EAAKsI,OAAS,IAA0B,IAArBzM,EAAOmN,KAAK7H,KAAe,CACrE,EAAKmH,OAASzM,EAAOmN,KAAKhJ,KAC1B,IAAIqB,EAAWxF,EAAOmN,KAAK3H,SACvBrB,EAAOO,EAAa+I,WAAWjI,GACK,OAApC,EAAK0F,YAAYvB,SAASxF,KAC5B,EAAKuG,kBACL,EAAKgB,kBACL,EAAKgC,YAAYvJ,EAAjB,WAA2BA,EAAKR,IAAhC,YAAuCQ,EAAKP,KAAO5D,EAAOmN,KAAKQ,gBAEzD3N,EAAOmN,KAAKhJ,OAAS,EAAKsI,SAClC,EAAKA,OAASzM,EAAOmN,KAAKhJ,KAC1B,EAAKyJ,aAAa5N,EAAOmN,KAAKxI,MAC9B,EAAK+F,kBACL,EAAKQ,YAAY2C,QAAQ7N,EAAOmN,KAAKxI,MACrC,EAAKuG,YAAY4C,QAAQ9N,EAAOmN,KAAKvI,MACrC,EAAKsG,YAAY6C,oBAEnB,EAAK1B,cACL,EAAKrB,WACL,IAAIgD,EAAgBhO,EAAOmN,KAAKvI,KAAO,EACrB5E,EAAOmN,KAAKC,MAAMY,KAChBhO,EAAOmN,KAAKc,MAA4B,IAArBjO,EAAOmN,KAAK7H,MACjD,EAAK2H,oBACL,EAAKxC,YAAa,GAElB,EAAKC,sBAGR5I,OAAM,SAACX,GACN,EAAKsL,QAAU,K,SAQX,IAAI7K,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,OAChC1K,KAAKkD,KAEClD,KAAKsK,YAAc,IAC5BtK,KAAKsK,aAAe,EACpBtK,KAAKoI,oBACLpI,KAAK8I,YAAYgD,iBAJjB9L,KAAKoI,oB,yIAQI7F,GACX,IAAK,IAAIkB,EAAI,EAAGA,EAAIlB,EAAKhE,OAAQkF,IAC/B,IAAK,IAAIE,EAAI,EAAGA,EAAIpB,EAAKkB,GAAGlF,OAAQoF,IAC9BpB,EAAKkB,GAAGE,KAAOpD,EACjBP,KAAK0I,QAAQjF,GAAGE,GAAG/C,SAASL,GACnBgC,EAAKkB,GAAGE,KAAOpD,EACxBP,KAAK0I,QAAQjF,GAAGE,GAAG/C,SAASL,GAE5BP,KAAK0I,QAAQjF,GAAGE,GAAG1C,gB,qCAMZxF,GAAM,IAAD,OAElBA,EAAKsQ,KAAO/L,KAAK+J,aACjBzN,EAAWqC,KAAKlD,EAFA,YAGfkC,MAAK,SAAAC,GAAU,OAAOA,EAAOgB,UAC7BjB,MAAK,SAACC,GACL,EAAKyM,QAAU,EACXzM,EAAOmN,KAAKhJ,OAAS,EAAKsI,SAC5B,EAAKA,QAAU,MAGlB3K,OAAM,SAAC9B,GAEN,EAAKyM,QAAU,O,2EAIDtI,EAAMiK,EAAKxB,G,iEAC3BxK,KAAKyK,gBAAgB1I,EAAMiK,EAAKxB,G,qJAKhCxK,KAAK+I,kBACL/I,KAAKiK,gB,+EAGelI,EAAMiK,EAAKxB,G,iFAE7BxK,KAAK0I,QAAQ3G,EAAKR,KAAKQ,EAAKP,KAAKZ,SAAS4J,G,SACpCxK,KAAKiM,eAAejM,KAAK6I,WAAWmD,GAAMxB,G,sDAEhDxK,KAAKqK,QAAU,E,2QAKjBrK,KAAKqI,YAAa,EACd6D,EAAS3L,EACT4L,EAAS,KACTC,EAAa,KACjBpM,KAAK4I,W,UACEsD,IAAWlM,KAAK8I,YAAYrB,YAA4C,IAA/BzH,KAAK8I,YAAYuD,U,sBACxDrM,KAAKrD,K,OACL,I,OAIA,I,QAIA,I,+BAPHwP,EAASnK,EAASsK,cAActM,KAAK6I,Y,UAC/B,IAAIrJ,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,mDAGrCyB,EAASxK,EAAS4K,cAAcvM,KAAK6I,Y,UAC/B,IAAIrJ,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,6DAGlB/D,EAAWa,cAAcxH,KAAK8I,YAAYxB,mBAAoB,EAAG4E,G,eAApFE,E,OACAD,EAASC,EAAWrK,K,wEAOpByK,EAAUlK,EAAa+I,WAAWc,GACtCnM,KAAKsJ,kBACLtJ,KAAK8I,YAAYvB,SAASiF,G,UACpBxM,KAAKyK,gBAAgB+B,EAASL,EAAQD,G,QAC5ClM,KAAK4I,W,uBAGP5I,KAAK6K,oBACL7K,KAAKqI,YAAa,E,qLAGCnE,EAAQuI,G,6EAClBhJ,EAAI,E,YAAGA,EAAIS,EAAO3F,Q,0BACR,CAAC2F,EAAOT,GAAGlC,IAAK2C,EAAOT,GAAGjC,KAAtCD,E,KAAKC,E,KACVxB,KAAK0I,QAAQnH,GAAKC,GAAKZ,SAAS6L,GAChCzM,KAAK0J,kB,SACC,IAAIlK,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,OAJJjH,I,wJA8FrC,IAAIlB,EAAOvC,KAAK/B,MAAMsE,KACpB,OACE,oCACE,yBAAKzC,UAAY,qBACdE,KAAK/B,MAAMmM,cAAgB7H,GAC1BvC,KAAK/B,MAAMmM,cAAgB,yBAAKtK,UAAU,iBAAiBM,KAAK,UAChE,0BAAMN,UAAU,WAAhB,qB,GA3VIQ,aCyBLoM,E,kDAnCX,aAAc,IAAD,8BACT,gBACKC,eAAiB,EAAKC,SAAStN,KAAd,gBAFb,E,uDAMT9D,EAASqR,cACT7Q,OAAOC,SAASC,KAAO,W,+BAIvB,OACI,yBAAK4D,UAAU,wDACX,wBAAIA,UAAU,yBAAwB,uBAAGA,UAAU,UAAU5D,KAAK,SAAQ,0BAAMkE,KAAK,MAAM0M,aAAW,QAA5B,UAApC,cACtC,yBAAKhN,UAAU,2BAA2Bb,GAAG,0BACzC,wBAAIa,UAAU,sBACd,wBAAIA,UAAU,YACV,uBAAGA,UAAU,WAAW5D,KAAK,SAA7B,SAEJ,wBAAI4D,UAAU,YACV,uBAAGA,UAAU,WAAW5D,KAAK,UAA7B,UAEJ,wBAAI4D,UAAU,YACV,uBAAGA,UAAU,WAAW5D,KAAK,YAA7B,YAEJ,wBAAI4D,UAAU,YACV,uBAAGA,UAAU,WAAW5D,KAAK,UAA7B,WAGJ,4BAAQ4D,UAAU,qCAAqC2B,QAASzB,KAAK2M,gBAArE,iB,GA/BFrM,aCySHyM,E,kDArSX,WAAYtM,GAAQ,IAAD,8BACf,cAAMA,IA2BVuM,iBAAmB,WACf,EAAKC,YAAYC,UAAY,EAAKjP,MAAMiP,UACxC,EAAKD,YAAYE,UAAY,EAAKlP,MAAMkP,UACxC,EAAKF,YAAYG,YAAc,EAAKnP,MAAMmP,YAC1C,EAAKH,YAAYI,YAAc,EAAKpP,MAAMoP,aAhC3B,EAmCnBC,OAAS,WAEL,GAAK,EAAKrP,MAAMsP,SAAhB,CAMAjR,EAAWoB,IADK,eAEfC,MAAK,SAAAC,GAAU,OAAOA,EAAOgB,UAC7BjB,MAAK,SAACC,GAEH,IAAInC,EAAO,CACP+R,IAAK5P,EAAO6P,KACZC,MAAM,GAGVpR,EAAWqC,KAAKlD,EAVJ,eAWXkC,MAAK,SAAAC,GACF,OAAIA,EAAOC,OAAS,IACT2B,QAAQC,OAAO7B,EAAOgB,QAE1BhB,EAAOgB,UAEjBjB,MAAK,SAACC,GACH5B,OAAOC,SAASC,KAAO,WAE1BwD,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,SAGnB8B,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,WA7BZ5B,OAAOC,SAASC,KAAO,SAtCZ,EAuEnB8N,QAAU,SAACkD,EAAWC,GACA,OAAdD,IACA,EAAKD,YAAYI,YAAcH,EAAUlF,IACzC,EAAKiF,YAAYC,UAAY/K,KAAK+F,MAAsB,IAAhBgF,EAAUjF,IAAU,KAG9C,OAAdkF,IACA,EAAKF,YAAYG,YAAcD,EAAUnF,IACzC,EAAKiF,YAAYE,UAAYhL,KAAK+F,MAAsB,IAAhBiF,EAAUlF,IAAU,KAGhE,EAAKzK,SAAS,CACV4P,YAAa,EAAKH,YAAYG,YAC9BC,YAAa,EAAKJ,YAAYI,YAC9BH,UAAW,EAAKD,YAAYC,UAC5BC,UAAW,EAAKF,YAAYE,aAtFjB,EAyFnB7P,kBAAoB,WAChB,EAAKmD,MAAMkN,cAAcnL,KAAK,EAAKkJ,SACnC,EAAKjL,MAAMkN,cAAc9I,MAAM,EAAK+I,eACpC,EAAKnN,MAAMkN,cAAcE,IAAI,EAAKC,QAClC,EAAKrN,MAAMkN,cAAcvK,SAAS,EAAK2K,aACvC,EAAKtN,MAAMkN,cAAcK,OAAO,EAAKC,WACrC,EAAKxN,MAAMkN,cAAcO,UAAU,EAAKC,eACxC,EAAK1N,MAAMkN,cAAcS,QAAQ,EAAKC,gBACtC,EAAK5N,MAAMkN,cAAc3D,QAAQ,EAAKA,UAjGvB,EAsGnB4D,cAAgB,SAACU,GACb,IAAI9K,EAAQ8K,EAAQ9K,MAChBD,EAAQ+K,EAAQ/K,MAChBgL,EAAQ,IAAM/K,EAAQD,GAC1B,EAAK/F,SAAS,CACVgG,MAAOA,EACPD,MAAOA,EACPgL,MAAOA,KA7GI,EAiHjBJ,cAAgB,SAACpN,IACW,IAAtB,EAAKyN,eAGT,EAAKC,cAAiB1N,IAAUR,EAAkB,EAAK0M,YAAYC,UAAW,EAAKD,YAAYE,UAC/F,EAAKsB,cAAiB,GAAGtM,KAAK+F,MAAM,GAAG,EAAKuG,cAAc,KAC1D,EAAKC,SAAWC,YAAY,EAAKC,UAAW,IAAM7N,GAClD,EAAKyN,cAAe,IAxHL,EAwIjBI,UAAY,SAAC7N,GACX,EAAK8N,cAAgB,EACrB,EAAKJ,eAAiB,EACtB,IAAIK,EAAa,IAAM3M,KAAK+F,MAAM,IAAI,EAAKuG,cAAc,IACrD1N,IAAUR,EACV,EAAK/C,SAAS,CACV0P,UAAW4B,IAGf,EAAKtR,SAAS,CACV2P,UAAW2B,IAIf,EAAKD,cAAgB,KACrB,EAAKE,eAAiB,EACtB,EAAKF,aAAe,GAGpB,EAAKJ,eAAiB,KACtB,EAAKA,cAAgB,EACjB1N,IAAUR,EACV,EAAK/C,SAAS,CACV6P,YAAa,EAAKpP,MAAMoP,YAAc,IAG1C,EAAK7P,SAAS,CACV4P,YAAa,EAAKnP,MAAMmP,YAAc,MAnKnC,EA0KjBiB,eAAiB,WACf,IAA0B,IAAtB,EAAKG,aACL,OAAO,EAEXQ,cAAc,EAAKN,UACnB,EAAKA,SAAW,KAChB,IAAI5M,EAA2B,GAArB,EAAKiN,cAAqB,EAAKF,aAKzC,OAJA,EAAKE,cAAgB,EACrB,EAAKF,aAAe,EACpB,EAAKL,cAAe,EACpB,EAAKxB,mBACElL,GArLQ,EAyLjBmM,UAAY,SAACgB,EAAKjB,GAChB,IAAIkB,EACJA,EAAgBlB,IAAWzN,EAAkB,wBAAoB,wBAC7D0O,GACA,EAAKzR,SAAS,CACV2R,WAAYF,EACZG,UAAWF,KA/LJ,EAoMjBxD,QAAU,SAAC2D,EAAWzN,GACpB,EAAKpE,SAAS,CACVoE,MAAOA,EACPY,KAAO6M,EAAa,eAAW,kBAvMpB,EA2MjBvB,OAAS,SAACD,EAAKlR,GACb,IAAI4Q,GAAW,EACF,IAAT5Q,IACA4Q,GAAW,GAGf,EAAK/P,SAAS,CACV8R,SAAUzB,EACVN,SAAUA,KAnNC,EAuNjBQ,YAAc,SAACwB,GACb,IAAIxN,EAAO,qBACC,OAARwN,IACAxN,EAAQwN,EAAI3K,KAAOrE,EAAiB,SAAK,UAE7CwB,EAAI,UAAMA,EAAN,kCAAoCwN,EAAIhO,IAAM,EAA9C,mBAA0DgO,EAAI/N,IAAM,EAApE,uBAAoF+N,EAAI1K,MAAxF,YACJ,EAAKrH,SAAS,CACV4F,SAAUrB,KA5Nd,EAAKuL,OAAS,EAAKA,OAAOhO,KAAZ,gBACd,EAAKrB,MAAQ,CACTuF,MAAO,EACPD,MAAO,EACPgL,MAAO,GACP3M,MAAO,EACPY,KAAM,eACNY,SAAU,qBACVkM,SAAU,yBACVH,YAAY,EACZC,UAAW,GACXjC,UAAW,EACXD,UAAW,EACXE,YAAa,GACbC,YAAa,GACbE,UAAU,GAEd,EAAKsB,aAAe,EACpB,EAAKH,SAAW,KAChB,EAAKK,cAAgB,EACrB,EAAKN,cAAgB,EACrB,EAAKD,cAAe,EACpB,EAAKvB,YAAc,GACnB,EAAKD,mBAzBU,E,oKA4HbhN,KAAKmO,cAAc5N,G,SACb,IAAIf,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,cACrC1K,KAAKqO,iBACLrO,KAAKmO,cAAc5N,G,SACb,IAAIf,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,cACrC1K,KAAKqO,iBACLrO,KAAKmO,cAAc5N,G,UACb,IAAIf,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,QACrC1K,KAAKqO,iBACLrO,KAAKmO,cAAc5N,G,sIA8FrB,OACI,yBAAKT,UAAU,yBACTE,KAAK/B,MAAMkR,YAAc,yBAAKrP,UAAU,OACtC,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,gBACA,uBAAGA,UAAU,eAAb,SAA6BE,KAAK/B,MAAMuE,KAAxC,YACA,uBAAG1C,UAAU,eAAeE,KAAK/B,MAAM2D,MAAvC,yBAGP5B,KAAK/B,MAAMkR,YAAc,yBAAKrP,UAAU,OACrC,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,IAA6B,0BAAMM,KAAK,MAAM0M,aAAW,UAA5B,gBAA7B,UACA,uBAAGhN,UAAU,eAAb,IAA6BE,KAAK/B,MAAMmR,UAAxC,KACA,4BAAQ3N,QAASzB,KAAKsN,OAAQxN,UAAU,8BAAxC,eAGR,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,kBACA,uBAAGA,UAAU,eAAc,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,gBAA3B,YAAwF9M,KAAK/B,MAAMsQ,OAEnG,uBAAGzO,UAAU,eAAc,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,UAA3B,YAAuF9M,KAAK/B,MAAMuF,OAClG,uBAAG1D,UAAU,eAAc,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,UAA3B,YAAuF9M,KAAK/B,MAAMsF,SAG1G,yBAAKzD,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,oBACA,uBAAGA,UAAU,eAAeE,KAAK/B,MAAMqR,YAG9CtP,KAAK/B,MAAMsP,UAAY,oCAAE,yBAAKzN,UAAU,OACrC,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACX,4BAAI,0BAAMM,KAAK,MAAM0M,aAAW,aAA5B,UAAJ,IAAsD9M,KAAK/B,MAAMoP,YAAjE,SAEJ,yBAAKvN,UAAU,SACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,uBAAuBM,KAAK,cAAcoP,MAAO,CAACC,MAAM,GAAD,OAAIzP,KAAK/B,MAAMiP,UAAf,MAA8BwC,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,UAG3J,yBAAK9P,UAAU,WAEnB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACX,4BAAI,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,UAAJ,IAAwD9M,KAAK/B,MAAMmP,YAAnE,SAEJ,yBAAKtN,UAAU,SACX,yBAAKA,UAAU,YACf,yBAAKA,UAAU,uBAAuBM,KAAK,cAAcoP,MAAO,CAACC,MAAM,GAAD,OAAIzP,KAAK/B,MAAMkP,UAAf,MAA8BuC,gBAAc,KAAKC,gBAAc,IAAIC,gBAAc,UAG3J,yBAAK9P,UAAU,WAtBK,KAwBxB,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,eAAd,aACA,uBAAGA,UAAU,eAAeE,KAAK/B,MAAMmF,iB,GA9R3C9C,aC6MLuP,G,wDAvMX,WAAYpP,GAAO,IAAD,8BACd,cAAMA,IAoDVqP,UAAY,SAACC,GACT,OAAQA,GACJ,KAAK,EACD,MAAO,8CACX,KAAK,EACD,MAAO,yBACX,KAAK,EACD,MAAO,0BACX,KAAK,EACD,MAAO,0BACX,KAAK,EACD,IAAIC,EAAO,EAAKlH,YAAYe,QAAQlH,aACpC,OAAa,OAATqN,EACO,kCAEJA,EACX,QACI,MAAO,8BAtED,EA0ElBC,gBAAkB,SAACzN,GACf,EAAK0N,WAAW1N,IA3EF,EA8ElB2N,cAAgB,WACZ,OAAO,EAAKC,YA/EE,EAkFlBC,cAAgB,SAACvM,EAAKN,GAClB,EAAK8M,SAASxM,EAAKN,IAnFL,EAsFlB+M,iBAAmB,WACf,IAAI/N,EAAO,EAAKsG,YAAYe,QAAQpC,UAChC+I,EAAa,EAAK1H,YAAYe,QAAQ4G,gBAEtCC,EAAW,EAAK5H,YAAYe,QAAQwC,UACpCsE,EAAa,EAAK7H,YAAYe,QAAQ+G,gBAItC5C,EAASzN,EACTmQ,IACIF,EAAWhN,MAAQgN,EAAWjN,MAC9ByK,EAASzN,EACHiQ,EAAWhN,MAAQgN,EAAWjN,QACpCyK,EAASzN,GAIToQ,EAAWpN,MAAMyE,KAAO,GAAK2I,EAAWpN,MAAM0E,MAC9C+F,EAASzN,GAGVoQ,EAAWnN,MAAMwE,KAAO,GAAK2I,EAAWnN,MAAMyE,KAAO,IACpD+F,EAASzN,IAIjB,EAAK/C,SAAS,CACVkT,SAAUA,IAGd,EAAKhF,QAAQlJ,IAASjC,EAAgB,EAAKuI,YAAYe,QAAQgH,gBAC/D,IAAIzN,EAAW,EAAK0F,YAAYe,QAAQiH,cACvB,OAAb1N,GACA,EAAK2K,YAAY3K,GAErB,EAAK2N,SAASP,GACd,EAAK1C,OAAO,EAAKgC,UAAU,EAAK3F,QAAS,EAAKA,QAC9C,EAAK6G,cAAcN,EAAU1C,IA5Hf,EA+HlBiD,kBAAoB,WAChB,EAAKC,oBAAsB,EACK,IAA5B,EAAKA,oBACL,EAAK1T,SAAS,CACV2T,cAAc,KAnIR,EAwIlB/N,SAAW,SAACgO,GACR,EAAKrD,YAAcqD,EACnB,EAAKH,qBA1IS,EA6IlBhD,UAAY,SAACmD,GACT,EAAKJ,cAAgBI,EACrB,EAAKH,qBA/IS,EAkJlBI,WAAa,SAACD,GACV,EAAK1F,QAAU0F,EACf,EAAKH,qBApJS,EAuJlBK,YAAc,SAACF,GACX,EAAKL,SAAWK,EAChB,EAAKH,qBAzJS,EA4JlBM,WAAa,SAACH,GACV,EAAKlB,WAAakB,EAClB,EAAKH,qBA9JS,EAiKlBO,SAAW,SAACJ,GACR,EAAKhB,SAAWgB,EAChB,EAAKH,qBAnKS,EAsKlBQ,SAAW,SAACL,GACR,EAAKd,SAAWc,EAChB,EAAKH,qBAxKS,EA2KlBS,UAAY,SAACN,GACT,EAAKtD,OAASsD,EACd,EAAKtD,OAAO,EAAKgC,UAAU,EAAK3F,SAChC,EAAK8G,qBA5KLzV,EAASmW,oBACTC,SAAS1U,KAAKsS,MAAMqC,SAAW,SAC/B,EAAKtB,iBAAmB,EAAKA,iBAAiBjR,KAAtB,gBACxB,EAAK+R,WAAa,EAAKA,WAAW/R,KAAhB,gBAClB,EAAKgS,YAAc,EAAKA,YAAYhS,KAAjB,gBACnB,EAAKoS,UAAY,EAAKA,UAAUpS,KAAf,gBACjB,EAAK8D,SAAW,EAAKA,SAAS9D,KAAd,gBAChB,EAAK2O,UAAY,EAAKA,UAAU3O,KAAf,gBACjB,EAAKiS,WAAa,EAAKA,WAAWjS,KAAhB,gBAClB,EAAKkS,SAAW,EAAKA,SAASlS,KAAd,gBAChB,EAAKmS,SAAW,EAAKA,SAASnS,KAAd,gBAChB,EAAK2Q,gBAAkB,EAAKA,gBAAgB3Q,KAArB,gBACvB,EAAK2R,kBAAoB,EAAKA,kBAAkB3R,KAAvB,gBACzB,EAAK+Q,cAAgB,EAAKA,cAAc/Q,KAAnB,gBAErB,EAAK6K,OAAS,EACd,EAAKlM,MAAQ,CACTyS,UAAU,EACVS,cAAc,GAGd,EAAK1Q,MAAMxE,SAAS6V,OAAOvT,OAAS,IACpC,EAAK4L,OAAS5D,SAAS,EAAK9F,MAAMxE,SAAS6V,OAAOC,QAAQ,IAC1D,EAAK5H,OAAW6H,MAAM,EAAK7H,SAAW,EAAKA,OAAS,EAAK,EAAI,EAAKA,QAGtE,EAAKrB,YAAc,CACfe,QAAS,IAAIvH,EACb4H,QAAS,EAAKqG,iBACdzG,aAAc,EAAKmG,gBACnBjG,QAAS,EAAKqG,cACdtG,WAAY,EAAKoG,cACjBhG,OAAQ,EAAKA,QAGjB,EAAK8H,SAAW,CACZzP,KAAM,EAAK6O,WACXxM,MAAO,EAAKyM,YACZzD,IAAK,EAAK6D,UACVtO,SAAU,EAAKA,SACf4K,OAAQ,EAAKC,UACbC,UAAW,EAAKqD,WAChBnD,QAAS,EAAKoD,SACdxH,QAAS,EAAKyH,UAGlB,EAAKP,mBAAqB,EAE1B1V,EAASmW,oBAlDK,E,qDAkLd,OACI,6BACI,kBAAC,EAAD,MACC3R,KAAK/B,MAAMyS,UAAY,yBAAK5Q,UAAU,QACnC,yBAAKA,UAAU,WACf,yBAAKA,UAAU,WAEnB,yBAAKA,UAAU,uBACX,wBAAIA,UAAU,wBAAuB,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,UAArC,oBAAwG,0BAAM1M,KAAK,MAAM0M,aAAW,eAA5B,YAE5G,yBAAKhN,UAAU,aACX,yBAAKA,UAAY,OACXE,KAAK/B,MAAMkT,cAAkB,kBAAC,EAAD,CAAOvH,YAAa5J,KAAK8I,cACxD,kBAAC,EAAD,CAAO6E,cAAe3N,KAAKiS,kB,GAhMhC3R,cC8NJ4R,E,kDAnOX,WAAYzR,GAAQ,IAAD,8BACf,cAAMA,IAmBV0R,gBAAkB,WAEd7V,EAAWqC,KAAK,GADA,mBAEfhB,MAAK,SAAAC,GAAW,OAAOA,EAAOgB,UAC9BjB,MAAK,SAACC,GACH5B,OAAOC,SAASC,KAAO,mBAE1BwD,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,OA5BD,EA0EnBwU,YAAc,SAACrU,GACXA,EAAMC,iBACN,IAEIvC,EAAO,CACP+R,IAAK,EAAKvP,MAAMwP,KAChBC,MAAM,GAEVpR,EAAWqC,KAAKlD,EANA,eAOfkC,MAAK,SAAAC,GAAW,OAAOA,EAAOgB,UAC9BjB,MAAK,SAACC,GACH,EAAKyU,aACL,EAAKC,uBAER5S,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,OAzFD,EA6FnB2U,WAAa,SAACxU,GACVA,EAAMC,iBAGN,EAAKR,SAAS,CACVgV,YAAa,KAGjB,IACI/W,EAAO,CACP+R,IAFUoE,SAASa,eAAe,QAAQvT,MAG1CwO,MAAM,GAGVpR,EAAWqC,KAAKlD,EAZA,eAafkC,MAAK,SAAAC,GACF,OAAGA,EAAOC,QAAU,KAAOD,EAAOC,OAAS,IAChCD,EAAOgB,OAEXY,QAAQC,OAAO7B,EAAOgB,WAEhCjB,MAAK,SAACC,GACH,EAAK0U,uBAER5S,OAAM,SAAC9B,GACJ,EAAKJ,SAAS,CACVgV,YAAa,mBAvHN,EA4HnBF,kBAAoB,WAEhBhW,EAAWoB,IADK,eAEfC,MAAK,SAAAC,GAAU,OAAOA,EAAOgB,UAC7BjB,MAAK,SAACC,GAECqE,OAAOC,KAAKtE,GAAQW,OAAS,GAC7B,EAAKkE,WAAW7E,EAAOoN,MAAOpN,EAAO6P,KAAM7P,EAAOiO,KAC/CjO,EAAO8U,SACF9U,EAAO8U,QAAQnU,OAAS,IAClBX,EAAO8U,QAAQC,SAAS/U,EAAOiO,MACjC,EAAKsG,oBAKjB,EAAKE,gBAGZ3S,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,OAhJD,EA8JnBgV,aAAe,SAAC7U,GACZA,EAAMC,iBAEN1B,EAAWqC,KAAK,GADA,qBAEfhB,MAAK,SAAAC,GAAU,OAAOA,EAAOgB,UAC7BjB,MAAK,SAACC,GACH,EAAK0U,uBAER5S,OAAM,SAAC9B,GACJ+B,QAAQC,IAAIhC,OArKhB,EAAKK,MAAQ,CACTwP,KAAM,UACNoF,QAAS,MACTC,QAAS,MACTC,SAAS,EACTC,aAAa,EACbC,cAAc,EACdT,YAAa,IAEjB,EAAKD,WAAa,EAAKA,WAAWjT,KAAhB,gBAClB,EAAKgT,kBAAoB,EAAKA,kBAAkBhT,KAAvB,gBACzB,EAAKsT,aAAe,EAAKA,aAAatT,KAAlB,gBACpB,EAAK8S,YAAc,EAAKA,YAAY9S,KAAjB,gBACnB,EAAK6S,gBAAkB,EAAKA,gBAAgB7S,KAArB,gBACvB,EAAK4T,kBAAoB,EAAKA,kBAAkB5T,KAAvB,gBAhBV,E,gEAiCfU,KAAKxC,SAAS,CACViQ,KAAM,UACNoF,QAAS,MACTC,QAAS,MACTC,SAAS,EACTC,aAAa,IAEjBhT,KAAKsS,oBAELtS,KAAKkT,sB,2JAILlT,KAAKsS,oB,SACC,IAAI9S,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,S,OACrC1K,KAAKkT,oB,uIAIEC,EAAM1F,EAAM2F,GACnB,IAAIC,EAAKF,EAAK,GAAGvQ,MAAM,KAAK,GACxB0Q,EAAMH,EAAK5U,OAAS,EAAI4U,EAAK,GAAGvQ,MAAM,KAAK,GAAI,MAC/CmQ,GAAU,EACVE,GAAe,OACNM,IAAT9F,IACAsF,GAAU,GAGVI,EAAK5U,QAAU,GAAK6U,IAAOD,EAAK,KAChCF,GAAe,GAGnBjT,KAAKxC,SAAS,CACVqV,QAASQ,EACTP,QAASQ,EACT7F,KAAMA,EACNsF,QAASA,EACTE,aAAcA,M,mCA+ElBjT,KAAKxC,SAAS,CACVqV,QAAS,MACTC,QAAS,MACTrF,KAAM,OACNsF,SAAS,EACTE,cAAc,M,+BAkBlB,OACI,yBAAKnT,UAAU,0BACf,wBAAIA,UAAU,2CAA0C,0BAAMM,KAAK,MAAM0M,aAAW,SAA5B,gBAAxD,gBAAkH,0BAAM1M,KAAK,MAAM0M,aAAW,SAA5B,uBAClH,yBAAKhN,UAAU,OACX,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,iBACA,uBAAGA,UAAU,aAAb,uBACA,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,UACX,4BAAQ2B,QAASzB,KAAK4S,aAAe9S,UAAU,6BAA6B0T,SAAUxT,KAAK/B,MAAM8U,UAAY/S,KAAK/B,MAAM+U,aAAxH,WAEJ,yBAAKlT,UAAU,aAI3B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,eACA,uBAAGA,UAAU,aAAwC,KAA3BE,KAAK/B,MAAMuU,YAAqB,cAAe,iBACzE,yBAAK1S,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,qBACf,2BAAOG,KAAK,OAAOH,UAAS,uBAAkBE,KAAK/B,MAAMuU,aAAevT,GAAG,OAAOiB,YAAY,WAAW4M,aAAW,MAAM2G,mBAAiB,iBAC3I,yBAAK3T,UAAU,sBACX,4BAAQA,UAAU,4BAA4BG,KAAK,SAASwB,QAASzB,KAAKuS,WAAYiB,SAAUxT,KAAK/B,MAAM8U,UAAY/S,KAAK/B,MAAM+U,aAAlI,eAGJ,yBAAKlT,UAAU,aAI3B,yBAAKA,UAAU,SACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAd,YAAqCE,KAAK/B,MAAMwP,MAChD,uBAAG3N,UAAU,sBAAqB,0BAAMM,KAAK,MAAM0M,aAAW,eAA5B,UAAlC,IAAsF9M,KAAK/B,MAAM4U,QAAjG,IAA2G7S,KAAK/B,MAAM8U,SAAW,0BAAM3S,KAAK,MAAM0M,aAAW,SAA5B,mBAAjI,QAAuL,0BAAM1M,KAAK,MAAM0M,aAAW,eAA5B,IAA4C9M,KAAK/B,MAAM6U,QAAvD,WACvL,yBAAKhT,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACX,4BAAQA,UAAU,+BAA+B2B,QAASzB,KAAKoS,YAAaoB,UAAWxT,KAAK/B,MAAM8U,UAAY/S,KAAK/B,MAAM+U,aAAzH,cAEJ,yBAAKlT,UAAU,SACX,4BAAQ2B,QAASzB,KAAKmS,gBAAiBrS,UAAU,gCAAgC0T,UAAWxT,KAAK/B,MAAM8U,UAAa/S,KAAK/B,MAAMgV,eAAkBjT,KAAK/B,MAAM+U,aAA5J,WAEJ,yBAAKlT,UAAU,mB,GA1NbQ,aCwBfoT,E,uKAvBP,OACI,yBAAK5T,UAAU,0BACf,wBAAIA,UAAU,2CAA2CE,KAAKS,MAAMkT,cAAcC,UAClF,yBAAK9T,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcE,KAAKS,MAAMkT,cAAcE,YACrD,uBAAG/T,UAAU,aAAaE,KAAKS,MAAMkT,cAAcG,aACnD,yBAAKhU,UAAU,OACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,SACX,uBAAGA,UAAU,6BAA6B5D,KAAI,UAAK8D,KAAKS,MAAMkT,cAAczX,OAAS8D,KAAKS,MAAMkT,cAAcI,SAElH,yBAAKjU,UAAU,mB,GAfnBQ,aC6BT0T,E,uKA3BP,OACI,yBAAKlU,UAAU,0BACf,wBAAIA,UAAU,2CAA2CE,KAAKS,MAAMkT,cAAcC,UAClF,yBAAK9T,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,cAAcE,KAAKS,MAAMkT,cAAcE,YACrD,uBAAG/T,UAAU,aAAaE,KAAKS,MAAMkT,cAAcG,aACnD,yBAAKhU,UAAU,OACX,yBAAKA,UAAU,SACX,uBAAGA,UAAU,6BAA6B5D,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcM,WAAajU,KAAKS,MAAMkT,cAAcO,aAEtH,yBAAKpU,UAAU,SACX,uBAAGA,UAAU,gCAAgC5D,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcQ,UAAYnU,KAAKS,MAAMkT,cAAcS,YAExH,yBAAKtU,UAAU,SACX,uBAAGA,UAAU,+BAA+B5D,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcU,WAAarU,KAAKS,MAAMkT,cAAcW,sB,GAlB/HhU,aC0FNiU,G,wDAnFX,WAAY9T,GAAO,IAAD,6BACd,cAAMA,GACNjF,EAASmW,oBAFK,E,qDAiDd,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK7R,UAAU,kBACP,yBAAKA,UAAU,kCAAkC0P,MAAO,CAACgF,eAAgB,OACrE,yBAAK1U,UAAU,UACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,kCAAkC0P,MAAO,CAACgF,eAAgB,SACrE,yBAAK1U,UAAU,SACX,kBAAC,EAAD,CAAQ6T,cAtDV,CAClBC,SAAU,8BACVC,WAAY,gCACZC,YAAa,0CACbG,SAAU,gBACVC,WAAY,kBACZC,QAAS,gBACTC,UAAW,oBACXC,SAAU,gBACVC,WAAY,wBA+CI,yBAAKxU,UAAU,SACX,kBAAC,EAAD,CAAW6T,cA7CN,CACzBC,SAAU,oCACVC,WAAY,iCACZC,YAAa,oDACb5X,KAAM,gBACN6X,OAAQ,oBA2CI,yBAAKjU,UAAU,mCACX,yBAAKA,UAAU,SACX,kBAAC,EAAD,CAAW6T,cA1CjB,CACdC,SAAU,6BACVC,WAAY,GACZC,YAAa,yBACb5X,KAAM,SACN6X,OAAQ,YAuCQ,yBAAKjU,UAAU,SACX,kBAAC,EAAD,CAAW6T,cArCd,CACjBC,SAAU,kCACVC,WAAY,GACZC,YAAa,gCACb5X,KAAM,WACN6X,OAAQ,aAkCQ,yBAAKjU,UAAU,SACX,kBAAC,EAAD,CAAW6T,cAhChB,CACfC,SAAU,0BACVC,WAAY,GACZC,YAAa,4BACb5X,KAAM,SACN6X,OAAQ,sB,GAhDGzT,cCuBRmU,E,uKA7BT,OACI,6BACE,wBAAI3U,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,UAAU,0BAAMpU,KAAK,MAAM0M,aAAW,SAA5B,gBAA9E,gBACA,wBAAIhN,UAAU,qDAAqD0P,MAAO,CAACgF,eAAgB,UACvF,wBAAI1U,UAAU,mBAAd,qCACA,wBAAIA,UAAU,mBAAd,mEACA,wBAAIA,UAAU,mBAAd,8FACA,wBAAIA,UAAU,mBAAd,sFACA,wBAAIA,UAAU,mBAAd,gFACA,wBAAIA,UAAU,mBAAd,wDAEJ,wBAAIA,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,SAAS,0BAAMpU,KAAK,MAAM0M,aAAW,WAA5B,gBAA7E,kBACA,wBAAIhN,UAAU,qDAAqD0P,MAAO,CAACgF,eAAgB,SACvF,wBAAI1U,UAAU,mBAAd,oCACA,wBAAIA,UAAU,mBAAd,kFAEJ,wBAAIA,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,UAAU,0BAAMpU,KAAK,MAAM0M,aAAW,MAA5B,gBAA9E,aACA,wBAAIhN,UAAU,qDAAqD0P,MAAO,CAACgF,eAAgB,UACvF,wBAAI1U,UAAU,mBAAd,oDACA,wBAAIA,UAAU,mBAAd,uCACA,wBAAIA,UAAU,mBAAkB,2BAAG,0BAAMM,KAAK,MAAM0M,aAAW,MAA5B,gBAAH,OAAhC,+BACA,wBAAIhN,UAAU,mBAAkB,2BAAG,0BAAMM,KAAK,MAAM0M,aAAW,MAA5B,gBAAH,YAAhC,oCACA,wBAAIhN,UAAU,mBAAkB,2BAAG,0BAAMM,KAAK,MAAM0M,aAAW,QAA5B,gBAAH,QAAhC,qE,GAxBIxM,aCqBLoU,E,kDAjBX,WAAYjU,GAAO,IAAD,6BACd,cAAMA,GACNjF,EAASmW,oBAFK,E,qDAMhB,OACE,6BACI,kBAAC,EAAD,MACA,yBAAK7R,UAAU,aACX,kBAAC,EAAD,Y,GAXQQ,aCwBTqU,E,uKAzBT,OACI,yBAAK7U,UAAU,SACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,YACb,yBAAK8U,IAAG,UAAK5U,KAAKS,MAAMkT,cAAckB,QAAU/U,UAAU,WAAWgV,IAAI,SAE3E,yBAAKhV,UAAU,YACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcE,KAAKS,MAAMkT,cAAcoB,UAArD,IAAiE/U,KAAKS,MAAMkT,cAAcqB,UAC1F,uBAAGlV,UAAU,aAAb,WAAkCE,KAAKS,MAAMkT,cAAcoB,UAA3D,OAAyE,uBACrEjV,UAAU,eADd,IACgC,uBAAG5D,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcxV,QAArC,UADhC,OAC4F,uBACxFjC,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcsB,aAAejW,OAAO,SAASkW,IAAI,uBADmB,YAD5F,KAGA,yBAAKpV,UAAU,cACgC,IAA3CE,KAAKS,MAAMkT,cAAcwB,OAAO5W,QAAiB,uBAAGrC,KAAI,UAAK8D,KAAKS,MAAMkT,cAAcwB,QAAUD,IAAI,sBAAsBlW,OAAO,SAASc,UAAU,wBAAnG,oB,GAhBhDQ,aC6FV8U,E,kDAzFb,WAAY3U,GAAO,IAAD,6BAChB,cAAMA,GACNjF,EAASmW,oBAFO,E,qDAsCd,OACE,6BACI,kBAAC,EAAD,MACA,yBAAK7R,UAAU,aACb,wBAAIA,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,UAAU,0BAAMpU,KAAK,MAAM0M,aAAW,SAA5B,gBAA9E,oBACA,yBAAKhN,UAAU,6BAA6B0P,MAAO,CAACgF,eAAgB,UAClE,yBAAK1U,UAAU,UACb,uBAAGA,UAAU,aAAb,oFACwC,uBAAG5D,KAAK,uCAAuCgZ,IAAI,sBAAsBlW,OAAO,UAAhF,UADxC,uIAIA,uBAAGc,UAAU,aAAb,wbAKA,uBAAGA,UAAU,aAAb,6GAGJ,wBAAIA,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,SAChE,0BAAMpU,KAAK,MAAM0M,aAAW,WAA5B,gBADJ,sBAGE,yBAAKhN,UAAU,6BAA6B0P,MAAO,CAACgF,eAAgB,SAChE,kBAAC,EAAD,CAAYb,cAvDb,CACXoB,UAAW,SACXC,SAAS,KACTC,YAAa,2CACbE,OAAQ,+BACRhX,MAAO,2BACP0W,OAAQ,gEAkDI,kBAAC,EAAD,CAAYlB,cAhDhB,CACRoB,UAAW,MACXC,SAAS,KACTC,YAAa,+CACbE,OAAQ,gCACRhX,MAAO,kCACP0W,OAAQ,4GA4CA,yBAAK/U,UAAU,6BAA6B0P,MAAO,CAACgF,eAAgB,SAChE,kBAAC,EAAD,CAAYb,cA3Cd,CACVoB,UAAW,QACXC,SAAS,KACTC,YAAa,wCACbE,OAAQ,8BACRhX,MAAO,8BACP0W,OAAQ,2GAsCI,kBAAC,EAAD,CAAYlB,cApCf,CACToB,UAAW,QACXC,SAAS,KACTC,YAAa,4CACbE,OAAQ,GACRhX,MAAO,qBACP0W,OAAQ,yKAgCF,wBAAI/U,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,OAAO,0BAAMpU,KAAK,MAAM0M,aAAW,SAA5B,gBAA3E,kBACA,yBAAKhN,UAAU,6BAA6B0P,MAAO,CAACgF,eAAgB,OAClE,yBAAK1U,UAAU,UACb,uBAAGA,UAAU,aAAb,uBAA6C,uBAAG5D,KAAK,mDAAmDgZ,IAAI,sBAAsBlW,OAAO,UAA5F,UAA7C,0BAAoL,uBAAG9C,KAAK,qDAAqDgZ,IAAI,sBAAsBlW,OAAO,UAA9F,WACpL,uBAAGc,UAAU,aAAb,eAAqC,uBAAG5D,KAAK,kCAAkCgZ,IAAI,sBAAsBlW,OAAO,UAA3E,UAArC,4BAA6J,uBAAG9C,KAAK,+CAA+CgZ,IAAI,sBAAsBlW,OAAO,UAAxF,WAC7J,uBAAGc,UAAU,aAAb,eAAqC,uBAAG5D,KAAK,0DAA0DgZ,IAAI,sBAAsBlW,OAAO,UAAnG,UAArC,0BAAmL,uBAAG9C,KAAK,qDAAqDgZ,IAAI,sBAAsBlW,OAAO,UAA9F,WACnL,uBAAGc,UAAU,aAAb,cAAoC,uBAAG5D,KAAK,qDAAqDgZ,IAAI,sBAAsBlW,OAAO,UAA9F,UAApC,4BAA+K,uBAAG9C,KAAK,+CAA+CgZ,IAAI,sBAAsBlW,OAAO,UAAxF,aAGnL,wBAAIc,UAAU,8BAA8B0P,MAAO,CAACgF,eAAgB,OAAO,0BAAMpU,KAAK,MAAM0M,aAAW,OAA5B,gBAA3E,mBACA,yBAAKhN,UAAU,6BAA6B0P,MAAO,CAACgF,eAAgB,OAClE,yBAAK1U,UAAU,UACb,uBAAGA,UAAU,aAAb,oFAA0G,uBAAG5D,KAAK,oGAAoGgZ,IAAI,sBAAsBlW,OAAO,UAA7I,mB,GAjFpGsB,aCqBT+U,E,uKApBP,OACI,yBAAKvV,UAAU,0BACf,wBAAIA,UAAU,2CAA0C,0BAAMM,KAAK,MAAM0M,aAAW,QAA5B,4BAAxD,sBAAyH,0BAAM1M,KAAK,MAAM0M,aAAW,QAA5B,wCAAzH,KACI,yBAAKhN,UAAU,aACX,wBAAIA,UAAU,cAAd,uBACA,uBAAGA,UAAU,aAAb,qCACsC,6BADtC,oEAEqE,6BAFrE,yEAG0E,8BAE1E,wBAAIA,UAAU,cAAd,qBACA,uBAAGA,UAAU,aAAb,kG,GAbaQ,a,iBCuIlBgV,E,kDAnIX,WAAY7U,GAAO,IAAD,8BACd,cAAMA,IAeV8U,aAAe,WAGM,mBAFF,EAAKtX,MAAMiB,MAAMsW,OAG5BlZ,EAAWmZ,OAAO,GAFN,qBAGX9X,MAAK,SAACC,GACH,OAAIA,EAAOC,QAAU,KAAOD,EAAOC,OAAS,IACjCD,EAAOgB,OAEXY,QAAQC,OAAO7B,EAAOgB,WAC9BjB,MAAK,SAACC,GACL,EAAK8X,WACLla,EAASqR,cACT,EAAKS,YACN5N,OAAM,SAAC9B,GACNA,EAAOD,MAAK,SAACC,GACT,EAAK+X,UAAU,kDAIvB,EAAKA,UAAU,qEApCL,EAwClBC,eAAgB,WACD,IAAIrM,MAAOsM,KACjBpM,QA1CS,EAqDlBqM,aAAe,SAAA/X,GACX,EAAKP,SAAS,CAAC0B,MAAOnB,EAAMiB,OAAOE,SAtDrB,EAyDlBwW,SAAW,WACP,EAAKlY,SACD,CACI0B,MAAO,GACP6W,MAAM,EACNC,UAAU,KA9DJ,EAmElBC,UAAY,WACR,EAAKzY,SACD,CACI0B,MAAO,GACP6W,MAAM,EACNC,UAAU,KAxEJ,EA6ElBL,UAAY,SAACvW,GACT,EAAK5B,SACD,CACI0Y,OAAQ9W,EACR2W,MAAM,KA/Ed,EAAKR,aAAe,EAAKA,aAAajW,KAAlB,gBACpB,EAAKqW,UAAY,EAAKA,UAAUrW,KAAf,gBACjB,EAAK2W,UAAY,EAAKA,UAAU3W,KAAf,gBACjB,EAAKoW,SAAW,EAAKA,SAASpW,KAAd,gBAChB,EAAKgO,OAAS,EAAKA,OAAOhO,KAAZ,gBACd,EAAKsW,eAAiB,EAAKA,eAAetW,KAApB,gBAEtB,EAAKrB,MAAQ,CACTiB,MAAO,GACP6W,MAAM,EACNG,OAAQ,IAZE,E,qKA8CLzS,EAAI,E,YAAGA,EAAI,G,uBAChBzD,KAAK4V,iB,SACC,IAAIpW,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,OAFlBjH,I,sBAIvBzH,OAAOC,SAASC,KAAO,I,qIAqCvB,OACI,yBAAK4D,UAAU,0BACf,wBAAIA,UAAU,2CAA0C,0BAAMM,KAAK,MAAM0M,aAAW,OAA5B,gBAAxD,wBAAwH,0BAAM1M,KAAK,MAAM0M,aAAW,OAA5B,iBACpH,yBAAKhN,UAAU,aACX,wBAAIA,UAAU,cAAd,oCACA,uBAAGA,UAAU,aAAb,SACU,2BAAG,mDADb,uCAGA,yBAAKA,UAAY,OACb,yBAAKA,UAAU,UACX,yBAAKA,UAAU,4BACf,2BAAOG,KAAK,OAAOH,UAAU,eAAeb,GAAG,SAASC,MAAOc,KAAK/B,MAAMiB,MAAOJ,SAAUkB,KAAK8V,aAAc5V,YAAY,8BAA8B4M,aAAW,WACnK,yBAAKhN,UAAU,sBACX,4BAAQA,UAAU,yBAAyB2B,QAASzB,KAAKuV,aAActV,KAAK,UAA5E,YAGR,yBAAKH,UAAU,WAElBE,KAAK/B,MAAM8X,MACZ,yBAAKjW,UAAU,YACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,WAAW2B,QAASzB,KAAKiW,WAAzC,QACA,0CAFJ,IAE6BjW,KAAK/B,MAAMiY,QAExC,yBAAKpW,UAAU,WAGlBE,KAAK/B,MAAM+X,UACZ,yBAAKlW,UAAU,YACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,WAAW2B,QAASzB,KAAKiW,WAAzC,QACA,4CAFJ,0DAIA,yBAAKnW,UAAU,iB,GA3HPQ,aC+IjB6V,E,kDAhJX,WAAY1V,GAAO,IAAD,8BACd,cAAMA,IAkBV2V,iBAAmB,WACf,GAAI,EAAKnY,MAAMoY,QAAU,EAAKpY,MAAMqY,MAChC,EAAKC,QAAQ,+BACV,GAAI,EAAKtY,MAAMoY,MAAM9X,OAAS,EACjC,EAAKgY,QAAQ,6DACV,GAAI,EAAKtY,MAAMuY,KAAKjY,OAAS,EAChC,EAAKgY,QAAQ,kCACV,CACH,IAAI9a,EAAO,CACP4C,SAAU,EAAKJ,MAAMoY,MACrBG,KAAM,EAAKvY,MAAMuY,MAGrBla,EAAWma,IAAIhb,EADC,qBACgBkC,MAAK,SAAC+Y,GAClC,OAAIA,EAAK7Y,QAAU,KAAO6Y,EAAK7Y,OAAS,IAC7B6Y,EAAK9X,OAETY,QAAQC,OAAOiX,EAAK9X,WAC5BjB,MAAK,SAAC+Y,GACL,EAAKhB,WACL,EAAKiB,iBACNjX,OAAM,SAACgX,GACNA,EAAK/Y,MAAK,SAAC+Y,GACP,EAAKH,QAAQG,EAAK7W,QAClB,EAAK8W,sBA3CH,EAiDlBb,aAAe,SAAC/X,GACZ,EAAKP,SAAL,eAESO,EAAMiB,OAAOC,GAAKlB,EAAMiB,OAAOE,SApD1B,EAyDlBqX,QAAU,SAACnX,GACP,EAAK5B,SACD,CACI0Y,OAAQ9W,EACRsW,UAAU,EACVa,SAAS,KA9DH,EAmElBb,SAAW,WACP,EAAKlY,SACD,CACIkY,UAAU,EACVa,SAAS,KAvEH,EA4ElBK,SAAW,WACP,EAAKpZ,SACD,CACIkY,UAAU,EACVa,SAAS,KAhFH,EAqFlBI,YAAc,WACV,EAAKnZ,SACD,CACIgZ,KAAM,GACNH,MAAO,GACPC,MAAO,MAxFf,EAAKF,iBAAmB,EAAKA,iBAAiB9W,KAAtB,gBACxB,EAAKiX,QAAU,EAAKA,QAAQjX,KAAb,gBACf,EAAKoW,SAAW,EAAKA,SAASpW,KAAd,gBAChB,EAAKsX,SAAW,EAAKA,SAAStX,KAAd,gBAChB,EAAKqX,YAAc,EAAKA,YAAYrX,KAAjB,gBAEnB,EAAKrB,MAAQ,CACTuY,KAAM,GACNN,OAAQ,GACRG,MAAO,GACPC,MAAO,GACPC,SAAS,EACTb,UAAU,GAdA,E,qDAgGd,OACI,yBAAK5V,UAAU,0BACf,wBAAIA,UAAU,2CAA0C,0BAAMM,KAAK,MAAM0M,aAAW,OAA5B,sBAAxD,oBAAqH,0BAAM1M,KAAK,MAAM0M,aAAW,OAA5B,iBACjH,yBAAKhN,UAAU,aACX,wBAAIA,UAAU,cAAd,qCACA,uBAAGA,UAAU,aAAb,2CAGA,yBAAKA,UAAY,OACjB,yBAAKA,UAAU,2BACP,2BAAOG,KAAK,WAAWH,UAAU,eAAeb,GAAG,OAAOC,MAAOc,KAAK/B,MAAMuY,KAAM1X,SAAUkB,KAAK8V,aAAc5V,YAAY,eAAe4M,aAAW,YAErJ,yBAAKhN,UAAU,2BACf,2BAAOG,KAAK,WAAWH,UAAU,eAAeb,GAAG,QAAQC,MAAOc,KAAK/B,MAAMoY,MAAOvX,SAAUkB,KAAK8V,aAAc5V,YAAY,eAAe4M,aAAW,YAEvJ,yBAAKhN,UAAU,2BACf,2BAAOG,KAAK,WAAWH,UAAU,eAAeb,GAAG,QAAQC,MAAOc,KAAK/B,MAAMqY,MAAOxX,SAAUkB,KAAK8V,aAAc5V,YAAY,wBAAwB4M,aAAW,WAChK,yBAAKhN,UAAU,sBACX,4BAAQA,UAAU,uBAAuB2B,QAASzB,KAAKoW,iBAAkBnW,KAAK,UAA9E,aAIXD,KAAK/B,MAAMsY,SACZ,yBAAKzW,UAAU,YACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,WAAW2B,QAASzB,KAAK4W,UAAzC,QACA,0CAFJ,IAE6B5W,KAAK/B,MAAMiY,QAExC,yBAAKpW,UAAU,WAGlBE,KAAK/B,MAAMyX,UACZ,yBAAK5V,UAAU,YACX,yBAAKA,UAAU,UACf,yBAAKA,UAAU,wBACX,0BAAMA,UAAU,WAAW2B,QAASzB,KAAK4W,UAAzC,QACA,4CAFJ,mCAIA,yBAAK9W,UAAU,iB,GAxIVQ,aCqCduW,E,kDA/BX,WAAYpW,GAAO,IAAD,6BACd,cAAMA,GACNjF,EAASmW,oBAFK,E,qDAMd,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK7R,UAAU,uBACX,yBAAKA,UAAU,kCAAkC0P,MAAO,CAACgF,eAAgB,UACrE,yBAAK1U,UAAU,eACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,kCAAkC0P,MAAO,CAACgF,eAAgB,SACrE,yBAAK1U,UAAU,eACX,kBAAC,EAAD,QAGR,yBAAKA,UAAU,kCAAkC0P,MAAO,CAACgF,eAAgB,UACrE,yBAAK1U,UAAU,eACX,kBAAC,EAAD,c,GAvBDQ,aCSZwW,I,6KAbT,OACE,yBAAKhX,UAAU,iBACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,6CACX,wBAAIA,UAAU,8BAAd,WACA,uBAAG5D,KAAK,SAASkE,KAAK,SAASN,UAAU,kBAAkB0P,MAAO,CAACrO,MAAO,WAAY4V,gBAAiB,UAAWC,YAAa,aAA/H,sB,GAPM1W,cCiDX2W,G,kDA/CX,WAAYxW,GAAO,IAAD,8BACd,cAAMA,IAIVlD,cAAgB,WAEZjB,EAAWoB,IADK,eAEfC,MAAK,SAACC,GACiB,MAAlBA,EAAOC,OACT,EAAKyP,SAELtR,OAAOC,SAASC,KAAO,aAV3B,EAAKqB,gBAFS,E,+KAkBR,IAAIiC,SAAQ,SAAAkL,GAAC,OAAIC,WAAWD,EAAG,Q,OACrC1O,OAAOC,SAASC,KAAO,Q,gIAIzB,OACE,6BACI,kBAAC,EAAD,MACA,yBAAK4D,UAAU,mCAAmC0P,MAAO,CAACgF,eAAgB,UACtE,yBAAK1U,UAAU,YACX,yBAAKA,UAAU,eACX,wBAAIA,UAAU,sDAAqD,0BAAMM,KAAK,MAAM0M,aAAW,QAA5B,kBAEvE,yBAAKhN,UAAU,UACX,wBAAIA,UAAU,sDAAd,mBAEJ,yBAAKA,UAAU,UACX,wBAAIA,UAAU,4CAAd,sCAEJ,yBAAKA,UAAU,UACX,wBAAIA,UAAU,4CAAd,sC,GAvCFQ,aCOF4W,QACW,cAA7Blb,OAAOC,SAASkb,UAEe,UAA7Bnb,OAAOC,SAASkb,UAEhBnb,OAAOC,SAASkb,SAASC,MACvB,2D,kBCANC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWC,IACtC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,QAAQC,UAAWnD,IACrC,kBAAC,IAAD,CAAOiD,OAAK,EAACC,KAAK,SAASC,UAAWhD,IACtC,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,SAASC,UAAWtC,IACtC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,WAAWC,UAAWE,IACxC,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,SAASC,UAAWra,IACtC,kBAAC,IAAD,CAAOma,OAAK,EAACC,KAAK,IAAIC,UAAWZ,KACjC,kBAAC,IAAD,CAAOY,UAAWT,QAIxBrF,SAASa,eAAe,SDkGpB,kBAAmBoF,WACrBA,UAAUC,cAAcC,MACrBpa,MAAK,SAAA2D,GACJA,EAAa0W,gBAEdtY,OAAM,SAAAuY,GACLtY,QAAQsY,MAAMA,EAAMC,c","file":"static/js/main.67fdd0f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/move.ac353055.wav\";","module.exports = __webpack_public_path__ + \"static/media/click.27243d86.wav\";","module.exports = __webpack_public_path__ + \"static/media/beep.5fccdcca.wav\";","const tokenKey = \"token\";\r\nconst refreshKey = \"refreshToken\";\r\n\r\nclass JwtUtils{\r\n    static storeToken(data){\r\n        localStorage.setItem(tokenKey, data.access);\r\n        localStorage.setItem(refreshKey, data.refresh);\r\n    }\r\n\r\n    static deleteToken(){\r\n        localStorage.removeItem(tokenKey);\r\n        localStorage.removeItem(refreshKey);\r\n    }\r\n\r\n    static checkTokenPresent(){\r\n        if (localStorage.getItem(tokenKey) === null || localStorage.getItem(refreshKey) === null) {\r\n            window.location.href = '/';\r\n        }\r\n    }\r\n\r\n    static getAccessToken(){\r\n        return localStorage.getItem(tokenKey);\r\n    }\r\n}\r\n\r\nexport default JwtUtils;","const serverCfg = {\r\n    server: \"\",\r\n    cors: \"cors\",\r\n}\r\n\r\nexport default serverCfg;","import JwtUtils from './jwtUtils.js';\r\nimport serverCfg from './serverCfg.js';\r\n\r\nclass serverComm{\r\n    static async post(data = {}, url) {\r\n        const response = fetch(`${serverCfg.server}${url}`, {\r\n          method: 'POST',\r\n          mode: serverCfg.cors,\r\n          cache: 'no-cache',\r\n          credentials: 'same-origin',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${JwtUtils.getAccessToken()}`,\r\n          },\r\n          redirect: 'follow',\r\n          referrerPolicy: 'no-referrer',\r\n          body: JSON.stringify(data),\r\n        });\r\n        return response;\r\n      }\r\n\r\n\r\n      static async get(url) {\r\n        // Default options are marked with *\r\n        const response = fetch(`${serverCfg.server}${url}`, {\r\n          method: 'GET', // *GET, POST, PUT, DELETE, etc.\r\n          mode: serverCfg.cors, // no-cors, *cors, same-origin\r\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: 'same-origin', // include, *same-origin, omit\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${JwtUtils.getAccessToken()}`,\r\n          },\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n        });\r\n        return response;\r\n      }\r\n\r\n      static async delete(data, url) {\r\n        // Default options are marked with *\r\n        const response = fetch(`${serverCfg.server}${url}`, {\r\n          method: 'DELETE', // *GET, POST, PUT, DELETE, etc.\r\n          mode: serverCfg.cors, // no-cors, *cors, same-origin\r\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: 'same-origin', // include, *same-origin, omit\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${JwtUtils.getAccessToken()}`,\r\n          },\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        });\r\n        return response;\r\n      }\r\n\r\n      static async put(data, url) {\r\n        // Default options are marked with *\r\n        const response = fetch(`${serverCfg.server}${url}`, {\r\n          method: 'PUT', // *GET, POST, PUT, DELETE, etc.\r\n          mode: serverCfg.cors, // no-cors, *cors, same-origin\r\n          cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\r\n          credentials: 'same-origin', // include, *same-origin, omit\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n            'Authorization': `JWT ${JwtUtils.getAccessToken()}`,\r\n          },\r\n          redirect: 'follow', // manual, *follow, error\r\n          referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\r\n          body: JSON.stringify(data) // body data type must match \"Content-Type\" header\r\n        });\r\n        return response;\r\n      }\r\n}\r\n\r\nexport default serverComm;","import React, { Component } from 'react';\r\n\r\nimport '../css/login.css';\r\nimport JwtUtils from '../utils/jwtUtils.js';\r\nimport serverComm from '../utils/serverComm.js';\r\n\r\nclass LoginPage extends Component {\r\n  constructor() {\r\n    super(); \r\n    this.state = {\r\n      signup: false,\r\n      login: \"Sign In\",\r\n      email: '',\r\n      password: '',\r\n      passwordConfirm: '',\r\n      checkingToken: false,\r\n     }\r\n\r\n     this.handleSubmit = this.handleSubmit.bind(this);\r\n     this.checkJWTToken = this.checkJWTToken.bind(this);\r\n\r\n  }\r\n\r\n  componentDidMount = () =>{\r\n    this.checkJWTToken();\r\n  }\r\n\r\n  checkJWTToken = () => {\r\n    this.setState({\r\n      checkingToken: true,\r\n    });\r\n    let postLocat = \"auth/check/\";\r\n    serverComm.get(postLocat)\r\n    .then((result) => {\r\n      if (result.status === 200){\r\n        window.location.href = '/home';\r\n      } else {\r\n        this.setState({\r\n          checkingToken: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    // eslint-disable-next-line\r\n    const {signup, _, email, password, passwordConfirm} = this.state;\r\n\r\n    if (password.length < 8) {\r\n      let err = \"Password too short!\";\r\n      this.setState({\r\n        login: err,\r\n      });\r\n      return;\r\n    }\r\n    if ((password !== passwordConfirm && signup)){\r\n      let err = \"Password mismatch!\";\r\n      this.setState({\r\n        login: err,\r\n      });\r\n      return;\r\n    }\r\n    this.tryLoginOrSignUp(signup, email, password);\r\n  }\r\n\r\n  getTempToken = () => {\r\n    let postLocat = \"auth/token/temp/\";\r\n    serverComm.post({}, postLocat).then((result) => {return result.json()})\r\n    .then((result) => {\r\n      JwtUtils.storeToken(result);\r\n      window.location.href = '/home';\r\n    });\r\n  }\r\n\r\n  tryLoginOrSignUp(signup, email, password){\r\n    let postLocat = (signup) ? \"auth/user/create/\" : \"auth/token/obtain/\";\r\n    let data = {\r\n      \"username\": email,\r\n      \"email\": email,\r\n      \"password\": password\r\n    };\r\n    serverComm.post(data, postLocat)\r\n    .then(result =>{\r\n      if (result.status >= 200 && result.status < 300){\r\n        return result.json()\r\n      }\r\n      return Promise.reject(result.json());\r\n    })\r\n    .then((result) => {\r\n      if (!signup){\r\n        JwtUtils.storeToken(result);\r\n        window.location.href = '/home';\r\n      } else {\r\n        this.tryLoginOrSignUp(!signup, email, password);\r\n      }\r\n    })\r\n    .catch((result)=> {\r\n      console.log(result)\r\n      result.then((result) =>{\r\n        this.setState({\r\n          login: result.detail,\r\n        });\r\n      })\r\n    });\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.id]: e.target.value });\r\n  }\r\n\r\n  _checkSignup = (e) => {\r\n    let msg = \"Sign In\"\r\n\r\n    if (e.target.checked){\r\n      msg = \"Sign Up!\"\r\n    }\r\n\r\n    this.setState({\r\n      signup: e.target.checked,\r\n      login: msg,\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <div className=\"d-flex fullScreen\">\r\n             <form className=\"white-background justify-content-center center text-center border border-light p-5 shadow\" onSubmit={this.handleSubmit}>\r\n                <p className=\"h2 noSelect\">Reversi</p>\r\n                <p className=\"mb-4 noSelect\">{this.state.login}</p>\r\n                <input type=\"email\" id=\"email\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.onChange} />\r\n                <input type=\"password\" id=\"password\" className=\"form-control mb-4\" placeholder=\"Password\" value={this.state.pwd1} onChange={this.onChange} />\r\n                {this.state.signup && <input type=\"password\" id=\"passwordConfirm\" className=\"form-control mb-4\" placeholder=\"Confirm Password\" value={this.passwordConfirm} onChange={this.onChange} />}\r\n                {!this.state.checkingToken && <button className=\"btn btn-dark btn-block my-4\" type=\"submit\">Sign In/Up</button>}\r\n                {this.state.checkingToken && <div className=\"spinner-border\" role=\"status\"><span className=\"sr-only\">Loading...</span></div>}\r\n                <div className=\"d-flex justify-content-around mb-3\">\r\n                    <div className=\"custom-control custom-checkbox\">\r\n                        <input type=\"checkbox\" onChange={this._checkSignup} className=\"custom-control-input\" id=\"signup\" checked={this.state.signup} />\r\n                        <label className=\"custom-control-label\" htmlFor=\"signup\">Create This Account</label>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n          </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from 'react';\r\nimport '../css/board.css';\r\n\r\nconst pieceVal = {\r\n    EMPTY: 0,\r\n    BLACK: 1,\r\n    WHITE: 2,\r\n    INVALUD: 3,\r\n}\r\n\r\nclass Piece extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let color = this.props.rendeDetails.background ? \"blackBoard\": \"whiteBoard\";\r\n    let pieceColor = this.props.rendeDetails.piece === pieceVal.WHITE ? \"whitePiece\": \"blackPiece\";\r\n\r\n    this.state = {\r\n        color: color,\r\n        originalColor: color,\r\n        hasPiece: this.props.rendeDetails.hasPiece,\r\n        piece: this.props.rendeDetails.piece,\r\n        pieceColor: pieceColor,\r\n    };\r\n  }\r\n\r\n  //Tell Parent that we mounted\r\n  componentDidMount(){\r\n    this.props.rendeDetails.registration(this.props.rendeDetails.row, this.props.rendeDetails.col, this);\r\n  }\r\n\r\n  getOriginalColor = () =>{\r\n    return this.state.originalColor;\r\n  }\r\n\r\n  setPiece = (val) => {\r\n    let pieceColor = (val === pieceVal.WHITE) ? \"whitePiece\": \"blackPiece\";\r\n    this.setState({\r\n        piece: val,\r\n        hasPiece:  true,\r\n        pieceColor: pieceColor,\r\n    });\r\n  }\r\n\r\n  removePiece = () => {\r\n    this.setState({\r\n        piece: pieceVal.BLACK,\r\n        hasPiece:  false,\r\n        pieceColor: \"blackPiece\",\r\n    });\r\n  }\r\n\r\n  hasPieceAlready = () => {\r\n    return this.state.hasPiece;\r\n  }\r\n\r\n  setBackGround(background){\r\n    this.setState({\r\n      color: background,\r\n    });  \r\n  }\r\n\r\n\r\n  render(){\r\n    let hasPiece = this.state.hasPiece;\r\n    return (\r\n      <div className={`flex-item ${this.state.color}`} onClick={e => this.props.rendeDetails.action(e, this.props.rendeDetails.row, this.props.rendeDetails.col, this)}>\r\n        {hasPiece && <div className={`circle ${this.state.pieceColor}`}></div>}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport {Piece, pieceVal} ;\r\n","class GreedyAI {\n\tstatic getGreedyMove(moves) {\n\t\tvar best = 0;\n\t\tvar ret = null;\n\t\tfor (var move in moves) {\n\t\t\tif (moves[move].length > best) {\n\t\t\t\tbest = moves[move].length;\n\t\t\t\tret = move;\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n}\n\nclass RandomAI {\n\tstatic getRandomMove(moves) {\n\t\treturn Object.keys(moves)[Math.floor(Math.random()*Object.keys(moves).length)];\n\t}\n}\n\nexport {\n\tGreedyAI,\n\tRandomAI\n}","// eslint-disable-next-line\nimport {_, pieceVal} from '../components/Piece';\n\nclass reversiLogic{\n\tconstructor(grid = null, turn = null){\n\t\tthis.grid = grid;\n\t\tif (grid === null){\n\t\t\tthis.grid = reversiLogic._initBoard();\n\t\t} else {\n\t\t\tthis.grid = grid;\n\t\t\t//this.extremisPieces = this.recomputeExtremePiece();\n\t\t}\n\t\tthis.extremisPieces = this.initExtremisPiece();\n\n\t\tthis.turn = turn;\n\t\tif (turn === null){\n\t\t\tthis.turn = pieceVal.BLACK;\n\t\t}\n\n\t\tthis.wouldBeFlippedPieces = this.getAvailableMoves(this.extremisPieces, this.turn);\n\t\tthis.over = false;\n\t\tthis.madeMoves = 0;\n\t\tthis.lastMove = null;\n\t\tthis.playerArr = null;\n\n\t\tthis.whiteTimeLeft = 1800;\n\t\tthis.blackTimeLeft = 1800;\n\t}\n\n\tsetTimeRemain(black, white){\n\t\tthis.blackTimeLeft = black;\n\t\tthis.whiteTimeLeft = white;\n\t}\n\n\tgetTimeRemain(){\n\t\treturn {\n\t\t\tblack: this.blackTimeLeft,\n\t\t\twhite: this.whiteTimeLeft,\n\t\t};\n\t}\n\tsetPlayers = (playerArr) => {\n\t\tthis.playerArr = playerArr;\n\t}\n\n\tgetPlayers = () => {\n\t\tif (this.playerArr === null){\n\t\t\treturn null;\n\t\t}\n\n\t\tif (this.playerArr.length === 2){\n\t\t\treturn `⚫ ${this.playerArr[0].split(\"@\")[0]} Vs. ⚪ ${this.playerArr[1].split(\"@\")[0]}`;\n\t\t} else if (this.playerArr.length === 1){\n\t\t\treturn `Just ${this.playerArr[0].split(\"@\")[0]} Here!`;\n\t\t}\n\t}\n\n\tgetLastMove(){\n\t\treturn this.lastMove;\n\t}\n\n\tsetGrid(grid){\n\t\tthis.grid = grid;\n\t}\n\n\tsetTurn(turn){\n\t\tthis.turn = turn;\n\t}\n\n\tgetMadeMoves(){\n\t\treturn this.madeMoves;\n\t}\n\n\tgetGrid(){\n\t\treturn this.grid;\n\t}\n\n\tgetDuplicateGrid(){\n\t\tlet ret = [];\n\t\tfor (let i = 0; i < this.grid.length; i++){\n\t\t\tlet row = new Array(8)\n\t\t\tfor (let j = 0; j < this.grid[i].length; j++){\n\t\t\t\trow[j] = this.grid[i][j];\n\t\t\t}\n\t\t\tret.push(row);\n\t\t}\n\t\treturn ret;\n\t}\n\n\tgetPossibleMovesAndFlip(){\n\t\treturn this.wouldBeFlippedPieces;\n\t}\n\n\tgetTurn(){\n\t\treturn this.turn;\n\t}\n\n\ttriggerRecompute(){\n\t\tthis.extremisPieces = this.initExtremisPiece();\n\t\tthis.wouldBeFlippedPieces = this.getAvailableMoves(this.extremisPieces, this.turn);\n\t\tlet remaining = 0;\n\t\tfor (let i = 0; i < this.grid.length; i++){\n\t\t\tfor (let j = 0; j < this.grid[i].length; j++){\n\t\t\t\tif (this.grid[i][j] === pieceVal.EMPTY){\n\t\t\t\t\tremaining += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis.madeMoves = 60 - remaining;\n\t}\n\n\tgetOver(){\n\t\treturn this.over;\n\t}\n\n\tgetPieceCount(){\n\t\tlet blk = 0;\n\t\tlet wht = 0;\n\n\t\tfor (let i = 0; i < this.grid.length; i++) {\n\t\t\tfor (let j = 0; j < this.grid[i].length; j++) {\n\t\t\t\tif (this.grid[i][j] === pieceVal.BLACK) {\n\t\t\t\t\tblk += 1;\n\t\t\t\t}\n\t\t\t\telse if(this.grid[i][j] === pieceVal.WHITE){\n\t\t\t\t\twht += 1\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn {black: blk, white: wht};\n\t}\n\n\tsetServerOver(){\n\t\tthis.over = true;\n\t}\n\n\tmakeMove(move){\n\t\tif (this.over){\n\t\t\treturn null;\n\t\t}\n\n\t\tlet moveKey = reversiLogic.keyFromObj(move);\n\t\tif (moveKey in this.wouldBeFlippedPieces){\n\t\t\tthis.grid[move.row][move.col] = this.turn;\n\t\t} else {\n\t\t\treturn null;\n\t\t}\n\n\t\tlet toFlip = [...this.wouldBeFlippedPieces[moveKey]];\n\n\t\tthis.flipPieces(toFlip);\n\t\tthis.recomputeExtremePiece(move.row, move.col);\n\t\tlet normalNext = reversiLogic.oppsitePiece(this.turn);\n\t\tlet nextWouldbeFlipped = this.getAvailableMoves(this.extremisPieces, normalNext);\n\n\t\t//Cannot move, flip normalNext to current again.\n\t\tif (Object.keys(nextWouldbeFlipped).length === 0){\n\t\t\tnormalNext = this.turn;\n\t\t\tthis.wouldBeFlippedPieces = this.getAvailableMoves(this.extremisPieces, normalNext);\n\t\t\tif (Object.keys(this.wouldBeFlippedPieces).length === 0){\n\t\t\t\tthis.over = true;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.wouldBeFlippedPieces = nextWouldbeFlipped;\n\t\t}\n\n\t\tlet retObj = {\n\t\t\tthisTurn: this.turn,\n\t\t\tnextTurn: normalNext,\n\t\t\twouldbeFlipped: [...toFlip],\n\t\t};\n\n\t\tthis.lastMove = {\n\t\t\tby: this.turn,\n\t\t\trow: move.row,\n\t\t\tcol: move.col,\n\t\t\tcount: retObj.wouldbeFlipped.length,\n\t\t}\n\t\tthis.madeMoves += 1;\n\n\t\tthis.turn = normalNext;\n\n\t\treturn retObj;\n\t}\n\n\tflipPieces(toFlip){\n\t\tfor (let i = 0; i < toFlip.length; i++){\n\t\t\tthis.grid[toFlip[i].row][toFlip[i].col] = reversiLogic.oppsitePiece(this.grid[toFlip[i].row][toFlip[i].col]);\n\t\t}\n\t}\n\n\tgetAvailableMoves(moves, turn){\n\t\tlet toTest = null;\n\t\tlet wouldBeFlippedPieces = {};\n\n\t\tfor (let move = 0; move < moves.length; move++) {\n\t\t\ttoTest = moves[move];\n\t\t\tlet toTestKey = reversiLogic.keyFromObj(toTest);\n\t\t\tfor (let a = -1; a <=1; a++) { //Computer the 8 directions for the move\n\t\t\t\tfor (let b = -1; b <=1; b++) {\n\t\t\t\t\tif (a !== 0 || b !== 0) {\n\t\t\t\t\t\tlet evalResult = this.computeDirectionalUntilRepeat(toTest.row, toTest.col, a, b, turn);\n\n\t\t\t\t\t\tif (evalResult.length > 0) {\n\t\t\t\t\t\t\tif (!wouldBeFlippedPieces[toTestKey]) {\n\t\t\t\t\t\t\t\twouldBeFlippedPieces[toTestKey] = [];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\twouldBeFlippedPieces[toTestKey] = wouldBeFlippedPieces[toTestKey].concat(evalResult);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn wouldBeFlippedPieces;\n\t}\n\n\n\tcomputeDirectionalUntilRepeat(i, j, iIter, jIter, type) {\n\t\tlet otherType = reversiLogic.oppsitePiece(type);\n\t\tlet inBetweenPieces = []\n\n\t\t//Does not bring us to an edge\n\t\tif ((i + iIter >= 0 && i + iIter < 8) && (j + jIter >= 0 && j + jIter < 8))\n\t\t{\n\n\t\t\t//next piece exists\n\t\t\tif (this.grid[i+iIter][j+jIter] === pieceVal.EMPTY) {\n\t\t\t\treturn [];\n\t\t\t}\n\n\t\t\t//Next Piece is oppsite\n\t\t\tif (this.grid[i+iIter][j+jIter] === otherType) {\n\n\t\t\t\t//Loop until we find another of us\n\t\t\t\tinBetweenPieces.push(\n\t\t\t\t\t{\n\t\t\t\t\t\trow: i+iIter,\n\t\t\t\t\t\tcol: j+jIter,\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tfor (let x = i + 2*iIter, y = j + 2*jIter; (x >= 0) && (x <= 7) && (y >= 0) && (y <= 7); x += iIter, y += jIter) {\n\n\t\t\t\t\t//Next, next piece is end, so cant do anything here...\n\t\t\t\t\tif ((x > 7) || (x < 0) || (y > 7) || (y < 0)){\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\t//End of Line\n\t\t\t\t\tif (this.grid[x][y] === pieceVal.EMPTY) {\n\t\t\t\t\t\treturn [];\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.grid[x][y] === type) {\n\t\t\t\t\t\treturn inBetweenPieces;\n\t\t\t\t\t}\n\n\t\t\t\t\tinBetweenPieces.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow: x,\n\t\t\t\t\t\t\tcol: y,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn [];\n\t}\n\n\n\tinitExtremisPiece(){\n\t\tlet filled = this.getFilledSpaces()\n\t\tlet curRow = 0;\n\t\tlet curCol = 0;\n\t\tlet adj =  [];\n\n\t\tfor (let i = 0; i< filled.length; i++) {\n\t\t\tcurRow = filled[i].row;\n\t\t\tcurCol = filled[i].col;\n\t\t\tfor (let z = curRow - 1; z <= (curRow + 1); z++) {\n\t\t\t\tfor (let x = curCol - 1; x <= (curCol + 1); x++){\n\t\t\t\t\tif (!reversiLogic._isCoordinateDup(adj, z, x) &&\n\t\t\t\t\t\treversiLogic._isCordValid(z, x) &&\n\t\t\t\t\t\t!this._isPiecePresent(z, x)) {\n\t\t\t\t\t\tadj.push(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow: z,\n\t\t\t\t\t\t\t\tcol: x,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn adj;\n\t}\n\n\t/* In Reversi, you can only make a move if a opposing piece is turned over\n\tIt can be safely said that when a move is made, it is made on an 'extreme' location\n\ttherefore, we can just recompute based on that piece */\n\trecomputeExtremePiece(i, j) {\n\t\tfor (let z = 0; z < this.extremisPieces.length; z++) {\n\t\t\tif (this.extremisPieces[z].row === i && this.extremisPieces[z].col === j)\n\t\t\t{\n\t\t\t\tthis.extremisPieces.splice(z, 1);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfor (let z = i - 1; z <= (i + 1) && z <= 7; z++) {\n\t\t\tfor (let x = j - 1; x <= (j + 1) && x <= 7; x++){\n\t\t\t\tif (!reversiLogic._isCoordinateDup(this.extremisPieces, z, x) &&\n\t\t\t\t\treversiLogic._isCordValid(z, x) &&\n\t\t\t\t\t!this._isPiecePresent(z, x)) {\n\t\t\t\t\t\tthis.extremisPieces.push(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\trow: z,\n\t\t\t\t\t\t\t\tcol: x,\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tgetFilledSpaces() {\n\t\tlet ret = [];\n\t\tfor (let i = 0; i < this.grid.length; i++) {\n\t\t\tfor (let j = 0; j < this.grid[i].length; j++) {\n\t\t\t\tif (this._isPiecePresent(i,j)) {\n\t\t\t\t\tret.push(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\trow: i,\n\t\t\t\t\t\t\tcol: j,\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn ret;\n\t}\n\n\t_isPiecePresent(i, j){\n\t\tif (this.grid[i][j] === pieceVal.WHITE ||\n\t\t\tthis.grid[i][j] === pieceVal.BLACK) {\n\t\t\treturn true\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstatic oppsitePiece(piece){\n\t\treturn (piece === pieceVal.WHITE)? pieceVal.BLACK: pieceVal.WHITE;\n\t}\n\n\tstatic keyFromObj(obj){\n\t\treturn `R${obj.row}C${obj.col}`;\n\t}\n\n\tstatic objFromKey(key){\n\t\tlet row = parseInt(key.charAt(1));\n\t\tlet col = parseInt(key.charAt(3));\n\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcol: col,\n\t\t};\n\t}\n\n\tstatic _isCoordinateDup(arr, i, j) {\n\t\tfor (let z = 0; z < arr.length; z++) {\n\t\t\tif (arr[z].row === i && arr[z].col === j)\n\t\t\t{\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tstatic _isCordValid(i, j) {\n\t\tif (i < 8 && i >=0 && j < 8 && j >= 0) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tstatic _initBoard(){\n\t\tlet grid = [];\n\t\tlet boardCheckerCount = 8;\n\n\t\tfor (let i = 0; i < boardCheckerCount; i++) {\n\t\t\tgrid[i] = [];\n\t\t\tfor (let j = 0; j < boardCheckerCount; j++) {\n\t\t\t\tgrid[i][j] = pieceVal.EMPTY;\n\t\t\t}\n\t\t}\n\t\treturn reversiLogic._initPiece(grid);\n\t}\n\n\tstatic _initPiece(grid){\n\t\tgrid[3][3] = pieceVal.WHITE;\n\t\tgrid[4][4] = pieceVal.WHITE;\n\t\tgrid[3][4] = pieceVal.BLACK;\n\t\tgrid[4][3] = pieceVal.BLACK;\n\t\treturn grid;\n\t}\n}\n\nexport default reversiLogic;","// eslint-disable-next-line\nimport {_, pieceVal} from '../components/Piece';\n\nimport reversiLogic from './reversi';\n\nclass MinMaxAlgo {\n\tstatic async getMinMaxMove(gameSituation, depth, turn) {\n\t\tlet curGame = new reversiLogic(gameSituation, turn);\n\t\tlet avail = curGame.getPossibleMovesAndFlip();\n\t\tlet maxOrMin = 64;\n\n\t\t//AI always uses white...\n\t\tif(turn === pieceVal.WHITE) {\n\t\t\tmaxOrMin = -64;\n\t\t}\n\n\t\tlet nextFavour = 0;\n\t\tlet moveIdx = null;\n\t\tlet nextState = null;\n\n\t\tif (depth > 0) {\n\t\t\tfor (let key in avail) {\n\t\t\t\tlet gameCpy = curGame.getDuplicateGrid(); //Arrays are mutable and passed as reference, must rebuild\n\t\t\t\tnextState = new reversiLogic(gameCpy, turn);\n\t\t\t\tnextState.makeMove(avail[key]);\n\t\t\t\tnextFavour = await MinMaxAlgo.getMinMaxMove(nextState.getDuplicateGrid(), (depth - 1), nextState.getTurn())//.score;\n\t\t\t\tnextFavour = nextFavour.score;\n\n\t\t\t\t//Assuming white maximizes and black minimizes\n\t\t\t\tif (turn === pieceVal.WHITE && nextFavour >= maxOrMin) {\n\t\t\t\t\tmaxOrMin = nextFavour;\n\t\t\t\t\tmoveIdx = key;\n\t\t\t\t} else if (turn === pieceVal.BLACK && nextFavour <= maxOrMin) {\n\t\t\t\t\tmaxOrMin = nextFavour;\n\t\t\t\t\tmoveIdx = key;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t//bottom level move, only really care about score...\n\t\t\treturn {\n\t\t\t\t\tscore: MinMaxAlgo.computeBoardGoodness(gameSituation),\n\t\t\t\t};\n\t\t}\n\n\t\treturn {\n\t\t\t\tscore: maxOrMin,\n\t\t\t\tmove: moveIdx,\n\t\t\t};\n\t}\n\n\tstatic computeBoardGoodness(board) {\n\t\tlet favourability = 0\n\t\t//We take black as -ve and white as +ve in this calculation\n\t\tfor (var i = 0; i < board.length; i++) {\n\t\t\tfor (var j = 0; j < board[i].length; j++){\n\t\t\t\tif (board[i][j] === pieceVal.EMPTY) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (board[i][j] === pieceVal.WHITE) {\n\t\t\t\t\tfavourability++;\n\t\t\t\t} else if (board[i][j] === pieceVal.BLACK){\n\t\t\t\t\tfavourability--;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn favourability;\n\t}\n}\n\nexport default MinMaxAlgo;","class timerHelper{\r\n    static convertSecondMin(second){\r\n        if (second < 0){\r\n            second = 0;\r\n        }\r\n\r\n        const secInMin = 60;\r\n        let min = Math.floor(second/secInMin);\r\n        let sec = Math.round(second % secInMin);\r\n        return {\r\n            min: min,\r\n            sec: sec,\r\n        }\r\n    }\r\n\r\n    static convertMinToSeconds(min){\r\n        return min.min*60 + min.sec;\r\n    }\r\n}\r\n\r\nexport default timerHelper; ","import React, { Component } from 'react';\r\nimport {Piece, pieceVal} from './Piece';\r\nimport {GreedyAI, RandomAI} from '../reversiLogic/dumbAIs';\r\nimport MinMaxAlgo from '../reversiLogic/minMaxAI';\r\n\r\nimport '../css/board.css';\r\nimport '../css/alerts.css';\r\n\r\nimport reversiLogic from '../reversiLogic/reversi';\r\nimport serverComm from '../utils/serverComm.js';\r\nimport timerHelper from '../utils/timeHelper.js';\r\n\r\nimport boardClickSound from '../sound/move.wav';\r\nimport clickSound from '../sound/click.wav';\r\n\r\nclass Board extends Component {\r\n      constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.placePieceSound = this.placePieceSound.bind(this);\r\n        this.placeClickSound = this.placeClickSound.bind(this);\r\n        this.getServerMoveLoop = this.getServerMoveLoop.bind(this);\r\n\r\n        this.gridRef = [];\r\n        let grid = this.initBoard(8,8);\r\n        this.highlighted = [];\r\n        this.availMoves = {};\r\n        this.reversiGame = this.props.gameDetails.reversi; //new reversiLogic();\r\n        this.moveStartAct = this.props.gameDetails.moveStartAct;\r\n        this.moveEndAct = this.props.gameDetails.moveEndAct;\r\n        this.setTime = this.props.gameDetails.setTime;\r\n\r\n\r\n        this.updateStats = this.props.gameDetails.moveAct;\r\n        this.mode = this.props.gameDetails.aiDiff;\r\n\r\n\r\n        this.state = {\r\n            grid: grid,\r\n            okayToRender: (this.mode !== 5),\r\n        };\r\n\r\n        this.over = false;\r\n        this.moveId = 0;\r\n        this.pieceOutstanding = 64;\r\n        this.overCounter = 0;\r\n        this.blockServerUpdate = false;\r\n      }\r\n\r\n      componentDidMount = () =>{\r\n        if (this.mode === 5){\r\n          this.getServerMoveLoop(); //Actually not a loop, its recursive;\r\n        } else {\r\n          this.okayToMove = true;\r\n        }\r\n      }\r\n\r\n      async handleClick(e, i, j, piece){\r\n        let toRender = this.reversiGame.getTurn();\r\n        \r\n        if (this.over || !this.okayToMove){\r\n          return;\r\n        }\r\n\r\n        this.blockServerUpdate = true;\r\n\r\n        //Human always plays blk, return if not your turn\r\n        if ((this.mode === 1 || this.mode === 2 || this.mode === 3) && toRender !== pieceVal.BLACK){\r\n          return;\r\n        }\r\n\r\n        let move = {\r\n          row: i,\r\n          col: j,\r\n        };\r\n\r\n        if (this.reversiGame.makeMove(move) !== null){\r\n          this.removeHighlight();\r\n          this.updateStats();\r\n          this.placePieceSound();\r\n          await this.postMoveActions(move, `R${i}C${j}`, toRender);\r\n        \r\n          if (this.mode !== 0 && this.mode !== 5){ //1-3 is AI\r\n            await new Promise(r => setTimeout(r, 500));\r\n            this.getAiMove();\r\n          } else if (this.mode === 0){ //0 is 2 player, LAN\r\n            this.postMoveHumanHelp();\r\n          } else if(this.mode === 5){ //5 is 2 player\r\n            this.makeServerMove(move);\r\n          }\r\n        }\r\n        //console.log(this.reversiGame.getOver());\r\n      }\r\n\r\n      async getServerMoveLoop(){\r\n        let postLocat = \"api/game?turn=1&over=1&grid=1\"\r\n        serverComm.get(postLocat)\r\n        .then(result =>{\r\n          if (result.status >= 200 && result.status < 300){\r\n            return result.json();\r\n          }\r\n          return Promise.reject(result.json());\r\n        })\r\n        .then((result) => {\r\n          this.okayToMove = false;\r\n\r\n          if (result.game.users.length >= 2){\r\n            this.setState({\r\n              okayToRender: true,\r\n            });\r\n          }\r\n\r\n          if (this.blockServerUpdate){\r\n            this.blockServerUpdate = false;\r\n            return;\r\n          }\r\n\r\n          this.reversiGame.setPlayers(result.game.users);\r\n          this.over = result.game.over;\r\n\r\n          //Can only set timer if timer is stopped, but we never start so...\r\n          //this.setTime({min: 10, sec: 30}, {min: 15, sec: 45});\r\n          let blackTimeleft = timerHelper.convertSecondMin(result.game.blackTimeLeft);\r\n          let whiteTimeleft = timerHelper.convertSecondMin(result.game.whiteTimeLeft);\r\n          //console.log(result.game);\r\n          this.setTime(blackTimeleft, whiteTimeleft);\r\n          this.reversiGame.setTimeRemain(blackTimeleft, whiteTimeleft);\r\n\r\n          if (result.game.move === this.moveId + 1 && result.game.over === false){\r\n            this.moveId = result.game.move;\r\n            let lastMove = result.game.lastMove;\r\n            let move = reversiLogic.objFromKey(lastMove);\r\n            if (this.reversiGame.makeMove(move) !== null){\r\n              this.removeHighlight();\r\n              this.placePieceSound();\r\n              this.serverMoved(move, `R${move.row}C${move.col}`, result.game.lastTurn);\r\n            }\r\n          } else if(result.game.move !== this.moveId){\r\n            this.moveId = result.game.move;\r\n            this.reRenderGrid(result.game.grid);\r\n            this.removeHighlight();\r\n            this.reversiGame.setGrid(result.game.grid);\r\n            this.reversiGame.setTurn(result.game.turn);\r\n            this.reversiGame.triggerRecompute();\r\n          }\r\n          this.updateStats();\r\n          this.getAvail();\r\n          let serverTurnIdx = result.game.turn - 1;\r\n          let currentTurn = result.game.users[serverTurnIdx];\r\n          if (currentTurn === result.game.you && result.game.over === false){\r\n            this.postMoveHumanHelp();\r\n            this.okayToMove = true;\r\n          } else {\r\n            this.removeHighlight();\r\n          }\r\n        })\r\n        .catch((e)=> {\r\n          this.moveId = -1;\r\n          //console.log(result.game.move)\r\n        });\r\n\r\n        //while (document.hidden){\r\n        //  await new Promise(r => setTimeout(r, 1000));\r\n        //}\r\n         \r\n        await new Promise(r => setTimeout(r, 2000)); //I guess try for 2.0 sec\r\n        if (!this.over){\r\n          this.getServerMoveLoop();\r\n        } else if (this.overCounter < 3){\r\n          this.overCounter += 1;\r\n          this.getServerMoveLoop();\r\n          this.reversiGame.setServerOver();\r\n        }\r\n      }\r\n\r\n      reRenderGrid(grid){\r\n        for (let i = 0; i < grid.length; i++){\r\n          for (let j = 0; j < grid[i].length; j++){\r\n            if (grid[i][j] === pieceVal.BLACK){\r\n              this.gridRef[i][j].setPiece(pieceVal.BLACK);\r\n            } else if (grid[i][j] === pieceVal.WHITE){\r\n              this.gridRef[i][j].setPiece(pieceVal.WHITE);\r\n            } else {\r\n              this.gridRef[i][j].removePiece();\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      makeServerMove(data){\r\n        let postLocat = \"api/game\"\r\n        data.time = this.moveEndAct();\r\n        serverComm.post(data, postLocat)\r\n        .then(result =>{return result.json()})\r\n        .then((result) => {\r\n          this.moveId += 1;\r\n          if (result.game.move !== this.moveId){  //Move rejected\r\n            this.moveId = -1;\r\n          }\r\n        })\r\n        .catch((result)=> {\r\n          //Aha, reset so board re-renders\r\n          this.moveId = -1;\r\n        });\r\n      }\r\n\r\n      async serverMoved(move, idx, toRender){\r\n        this.postMoveActions(move, idx, toRender);\r\n        //this.postMoveHumanHelp();\r\n      }\r\n\r\n      postMoveHumanHelp(){\r\n        this.getAvailAndMark();\r\n        this.updateStats();\r\n      }\r\n\r\n      async postMoveActions(move, idx, toRender){\r\n        try {\r\n          this.gridRef[move.row][move.col].setPiece(toRender);\r\n          await this.flipBulkPieces(this.availMoves[idx], toRender);\r\n        } catch (e){\r\n          this.moveId = -1; //Re-render...\r\n        }\r\n      }\r\n\r\n      async getAiMove(){\r\n        this.okayToMove = false;\r\n        let aiTurn = pieceVal.WHITE;\r\n        let aiMove = null;\r\n        let minMaxStat = null\r\n        this.getAvail();\r\n        while (aiTurn === this.reversiGame.getTurn() && this.reversiGame.getOver() === false){\r\n          switch(this.mode){\r\n            case 1:\r\n              aiMove = RandomAI.getRandomMove(this.availMoves);\r\n              await new Promise(r => setTimeout(r, 100));\r\n              break;\r\n            case 2:\r\n              aiMove = GreedyAI.getGreedyMove(this.availMoves);\r\n              await new Promise(r => setTimeout(r, 300));\r\n              break;\r\n            case 3:\r\n              minMaxStat = await MinMaxAlgo.getMinMaxMove(this.reversiGame.getDuplicateGrid(), 5, aiTurn);\r\n              aiMove = minMaxStat.move;\r\n              //console.log(minMaxStat.score);\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          //Actually make the move\r\n          let moveObj = reversiLogic.objFromKey(aiMove);\r\n          this.placePieceSound();\r\n          this.reversiGame.makeMove(moveObj);\r\n          await this.postMoveActions(moveObj, aiMove, aiTurn);\r\n          this.getAvail();\r\n        }\r\n        //Once done, help human again\r\n        this.postMoveHumanHelp();\r\n        this.okayToMove = true;\r\n      }\r\n\r\n      async flipBulkPieces(toFlip, flipTo){\r\n        for (let i = 0; i < toFlip.length; i++){\r\n          let [row, col] = [toFlip[i].row, toFlip[i].col];\r\n          this.gridRef[row][col].setPiece(flipTo);\r\n          this.placeClickSound();\r\n          await new Promise(r => setTimeout(r, 150));\r\n        }\r\n      }\r\n\r\n      removeHighlight = () =>{\r\n        for (let i = 0 ;i < this.highlighted.length; i++){\r\n          let square = this.highlighted[i];\r\n          let origColor =  this.gridRef[square.row][square.col].getOriginalColor();\r\n          this.gridRef[square.row][square.col].setBackGround(origColor);\r\n        }\r\n      }\r\n\r\n      getAvail = () => {\r\n        this.availMoves = this.reversiGame.getPossibleMovesAndFlip();\r\n      }\r\n\r\n      getAvailAndMark = () => {\r\n        this.availMoves = this.reversiGame.getPossibleMovesAndFlip();\r\n        for (let key in this.availMoves){\r\n          let row = parseInt(key.charAt(1));\r\n          let col = parseInt(key.charAt(3));\r\n          this.gridRef[row][col].setBackGround(\"highlighted\");\r\n          this.highlighted.push(\r\n            {\r\n              row: row,\r\n              col: col,\r\n            }\r\n          )\r\n        }\r\n      }\r\n\r\n      registerPiece = (i, j, obj) => {\r\n        this.gridRef[i][j] = obj;\r\n        this.pieceOutstanding -= 1;\r\n\r\n        if (this.pieceOutstanding === 0){\r\n          this.getAvailAndMark();\r\n        }\r\n      }\r\n\r\n      initBoard = (x,y) =>{\r\n        let grid = [];\r\n        let row = []\r\n        let background = true;\r\n        for (let i = 0; i < x; i++){\r\n            for (let j = 0; j < y; j++){\r\n              let piece = pieceVal.EMPTY;\r\n              let hasPiece = false;\r\n              if ((i=== 3 && j===3) || (i === 4 && j===4)){piece = pieceVal.WHITE; hasPiece = true;}\r\n              if ((i=== 3 && j===4) || (i === 4 && j===3)){piece = pieceVal.BLACK; hasPiece = true;}\r\n\r\n              let pieceProps = {\r\n                background: background,\r\n                piece: piece,\r\n                hasPiece: hasPiece,\r\n                row: i,\r\n                col: j,\r\n                action: this.handleClick,\r\n                registration: this.registerPiece,\r\n              }\r\n              //let pieceToRender = this.createComponent(\"Piece\", pieceProps);\r\n              //row.push(pieceToRender);\r\n              row.push(<Piece key={`R${i}C${j}`} rendeDetails={pieceProps}/>);\r\n              background = !background;\r\n            }\r\n          background = !background;\r\n          grid.push(<div key={`R${i}`}className= \"flex-container\">{ row } </div>);\r\n          this.gridRef.push(new Array(8));\r\n          row = [];\r\n        }\r\n        return grid;\r\n      }\r\n    \r\n      setPiece = (val) => {\r\n        this.setState({\r\n            squareValue: val,\r\n        });\r\n      }\r\n\r\n      placePieceSound =()=>{\r\n        var boardClick = new Audio (boardClickSound);\r\n        boardClick.play();\r\n      }\r\n\r\n      placeClickSound =()=>{\r\n        var click = new Audio (clickSound);\r\n        click.play();\r\n      }\r\n    \r\n      render(){\r\n      let grid = this.state.grid;\r\n        return (\r\n          <>\r\n            <div className = \"col-8 text-center\">\r\n              {this.state.okayToRender && grid}\r\n              {!this.state.okayToRender && <div className=\"spinner-border\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n              </div>}\r\n            </div>\r\n          </>\r\n        );\r\n      };\r\n}\r\n\r\nexport default Board;\r\n","import React, { Component } from 'react';\r\nimport JwtUtils from '../utils/jwtUtils.js';\r\n\r\nclass Nav extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.__handleLogout = this.__logout.bind(this);\r\n    }\r\n\r\n    __logout(){\r\n        JwtUtils.deleteToken();\r\n        window.location.href = '/login';\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar navbar-expand navbar-dark bg-dark shadow mb-2\" >\r\n                <h6 className=\"navbar-brand noSelect\"><a className=\"inherit\" href=\"/home\"><span role=\"img\" aria-label=\"logo\">⭕</span> Reversi!</a></h6>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/home\">Home</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/rules\">Rules</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/account\">Account</a>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <a className=\"nav-link\" href=\"/about\">About</a>\r\n                    </li>\r\n                    </ul>\r\n                    <button className=\"btn btn-outline-light my-2 my-sm-0\" onClick={this.__handleLogout}>Log Off</button>\r\n                </div>\r\n                </nav>\r\n        );\r\n    };\r\n}\r\nexport default Nav;","import React, { Component } from 'react';\r\n\r\nimport '../css/board.css';\r\nimport { pieceVal } from './Piece';\r\nimport serverComm from '../utils/serverComm.js';\r\n\r\nclass Stats extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.goHome = this.goHome.bind(this);\r\n        this.state = {\r\n            white: 2,\r\n            black: 2,\r\n            empty: 60,\r\n            moves: 0,\r\n            turn: \"⚫ Black\",\r\n            lastMove: \"No Moves Made Yet!\",\r\n            opponent: \"🤖 Beep-Boop\",\r\n            someoneWon: false,\r\n            winnerMsg: \"\",\r\n            whiteTime: 0,\r\n            blackTime: 0,\r\n            whiteMinute: 30,\r\n            blackMinute: 30,\r\n            timerVis: false,\r\n        };\r\n        this.timerCounter = 0;\r\n        this.interval = null;\r\n        this.elapsedMinute = 0;\r\n        this.secondaryTime = 0;\r\n        this.timerRunning = false;\r\n        this.cachedState = {};\r\n        this.storeCachedState();\r\n    }\r\n\r\n    storeCachedState = () => {\r\n        this.cachedState.blackTime = this.state.blackTime;\r\n        this.cachedState.whiteTime = this.state.whiteTime;\r\n        this.cachedState.whiteMinute = this.state.whiteMinute;\r\n        this.cachedState.blackMinute = this.state.blackMinute;\r\n    }\r\n\r\n    goHome = () =>{\r\n        //untimed game, so can just leave\r\n        if (!this.state.timerVis){\r\n            window.location.href = \"/home\";\r\n            return;\r\n        }\r\n\r\n        let postLocat = \"lobby/room/\";\r\n        serverComm.get(postLocat)\r\n        .then(result =>{return result.json()})\r\n        .then((result) => {\r\n           \r\n            let data = {\r\n                gid: result.room,\r\n                join: false,\r\n            };\r\n\r\n            serverComm.post(data, postLocat)\r\n            .then(result => {\r\n                if (result.status > 400){\r\n                    return Promise.reject(result.json());\r\n                }\r\n                return result.json();\r\n            })\r\n            .then((result) => {\r\n                window.location.href = \"/home\";\r\n            })\r\n            .catch((result)=> {\r\n                console.log(result);\r\n            });\r\n        })\r\n        .catch((result)=> {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    setTime = (blackTime, whiteTime) => {\r\n        if (blackTime !== null){\r\n            this.cachedState.blackMinute = blackTime.min;\r\n            this.cachedState.blackTime = Math.round(blackTime.sec * 100/60);\r\n        }\r\n        \r\n        if (whiteTime !== null){\r\n            this.cachedState.whiteMinute = whiteTime.min;\r\n            this.cachedState.whiteTime = Math.round(whiteTime.sec * 100/60);\r\n        }\r\n\r\n        this.setState({\r\n            whiteMinute: this.cachedState.whiteMinute,\r\n            blackMinute: this.cachedState.blackMinute,\r\n            blackTime: this.cachedState.blackTime,\r\n            whiteTime: this.cachedState.whiteTime,\r\n        });\r\n    }\r\n    componentDidMount = () => {\r\n        this.props.updateDetails.turn(this.setTurn);\r\n        this.props.updateDetails.count(this.setPieceCount);\r\n        this.props.updateDetails.opp(this.setOpp);\r\n        this.props.updateDetails.lastMove(this.setLastMove);\r\n        this.props.updateDetails.winner(this.setWinner);\r\n        this.props.updateDetails.startTime(this.startInterval);\r\n        this.props.updateDetails.endTime(this.getElapsedTime);\r\n        this.props.updateDetails.setTime(this.setTime);\r\n        //this.setTime({min: 10, sec: 30}, {min: 15, sec: 45})\r\n        //this.test();\r\n    }\r\n\r\n    setPieceCount = (inCount) => {\r\n        let white = inCount.white;\r\n        let black = inCount.black;\r\n        let empty = 64 - (white + black);\r\n        this.setState({\r\n            white: white,\r\n            black: black,\r\n            empty: empty,\r\n        });\r\n      }\r\n      \r\n      startInterval = (piece) =>{\r\n        if (this.timerRunning === true){\r\n            return;\r\n        }\r\n        this.secondaryTime = (piece === pieceVal.BLACK) ? this.cachedState.blackTime: this.cachedState.whiteTime;\r\n        this.secondaryTime = (60-Math.round(60*this.secondaryTime/100));\r\n        this.interval = setInterval(this.timerFunc, 1000, piece);\r\n        this.timerRunning = true;\r\n      }\r\n\r\n      async test(){\r\n          this.startInterval(pieceVal.BLACK);\r\n          await new Promise(r => setTimeout(r, 70000));\r\n          this.getElapsedTime();\r\n          this.startInterval(pieceVal.WHITE);\r\n          await new Promise(r => setTimeout(r, 70000)); \r\n          this.getElapsedTime();\r\n          this.startInterval(pieceVal.BLACK);\r\n          await new Promise(r => setTimeout(r, 200000)); \r\n          this.getElapsedTime();\r\n          this.startInterval(pieceVal.WHITE);\r\n      }\r\n\r\n      timerFunc = (piece) => {\r\n        this.timerCounter += 1;\r\n        this.secondaryTime += 1;\r\n        let secondHand = 100 - Math.round(100*this.secondaryTime/60);\r\n        if (piece === pieceVal.BLACK){\r\n            this.setState({\r\n                blackTime: secondHand,\r\n            });\r\n        } else {\r\n            this.setState({\r\n                whiteTime: secondHand,\r\n            });\r\n        }\r\n\r\n        if (this.timerCounter >= 60){\r\n            this.elapsedMinute += 1;\r\n            this.timerCounter = 0;\r\n        }\r\n\r\n        if (this.secondaryTime >= 60){\r\n            this.secondaryTime = 0;\r\n            if (piece === pieceVal.BLACK){\r\n                this.setState({\r\n                    blackMinute: this.state.blackMinute - 1,\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    whiteMinute: this.state.whiteMinute - 1,\r\n                });\r\n            }\r\n        }\r\n        //console.log(this.elapsedMinute * 60 + this.timerCounter)\r\n      }\r\n\r\n      getElapsedTime = () =>{\r\n        if (this.timerRunning === false){\r\n            return 0;\r\n        }\r\n        clearInterval(this.interval);\r\n        this.interval = null;\r\n        let ret = this.elapsedMinute * 60 + this.timerCounter;\r\n        this.elapsedMinute = 0;\r\n        this.timerCounter = 0;\r\n        this.timerRunning = false;\r\n        this.storeCachedState();\r\n        return ret;\r\n      }\r\n\r\n\r\n      setWinner = (won, winner) => {\r\n        let winningPiece = \"⚫⚪ Its a Tie!\"\r\n        winningPiece = (winner === pieceVal.BLACK) ? \"⚫ Black Has Won!\" :\"⚪ White Has Won!\";\r\n        if (won){\r\n            this.setState({\r\n                someoneWon: won,\r\n                winnerMsg: winningPiece,\r\n            });\r\n        }\r\n      }\r\n\r\n      setTurn = (blackTurn, moves) => {\r\n        this.setState({\r\n            moves: moves,\r\n            turn: (blackTurn) ? \"⚫ Black\" :\"⚪ White\",\r\n        });\r\n      }\r\n\r\n      setOpp = (opp, mode) => {\r\n        let timerVis = false;\r\n        if (mode === 5){\r\n            timerVis = true;\r\n        }\r\n\r\n        this.setState({\r\n            opponent: opp,\r\n            timerVis: timerVis,\r\n        });\r\n      }\r\n\r\n      setLastMove = (mov) =>{\r\n        let move = \"No Moves Made Yet!\";\r\n        if (mov !== null){\r\n            move = (mov.by === pieceVal.BLACK)? \"⚫\": \"⚪\";\r\n        }\r\n        move = `${move} Placed a Piece at Row ${mov.row + 1} Column ${mov.col + 1}, Capturing ${mov.count} Pieces!`\r\n        this.setState({\r\n            lastMove: move\r\n        });\r\n      }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"col-4 w-100 noSelect\">\r\n                {!this.state.someoneWon && <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\">Current Turn</h2>\r\n                        <p className=\"text-center\">➡{this.state.turn} to Move</p>\r\n                        <p className=\"text-center\">{this.state.moves} Moves Made so Far!</p>\r\n                    </div>\r\n                </div>}\r\n                {this.state.someoneWon && <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\"> <span role=\"img\" aria-label=\"winner\">👑</span>Winner</h2>\r\n                        <p className=\"text-center\"> {this.state.winnerMsg} </p>\r\n                        <button onClick={this.goHome} className=\"btn btn-outline-dark w-100\"> Go Home </button>\r\n                    </div>\r\n                </div>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\">Current Pieces</h2>\r\n                        <p className=\"text-center\"><span role=\"img\" aria-label=\"emptySquare\">🔲</span> Empty X {this.state.empty}</p>\r\n\r\n                        <p className=\"text-center\"><span role=\"img\" aria-label=\"whiteCircle\">⚪</span> White X {this.state.white}</p>\r\n                        <p className=\"text-center\"><span role=\"img\" aria-label=\"blackCircle\">⚫</span> Black X {this.state.black}</p>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\">Current Opponent</h2>\r\n                        <p className=\"text-center\">{this.state.opponent}</p>\r\n                    </div>\r\n                </div>\r\n                {this.state.timerVis && <><div className=\"row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-4\">\r\n                        <h6><span role=\"img\" aria-label=\"blkCircle\">⚫</span> {this.state.blackMinute} Min</h6>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <div className=\"progress\">\r\n                        <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width:`${this.state.blackTime}%`}} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-2\"></div>\r\n                    <div className=\"col-4\">\r\n                        <h6><span role=\"img\" aria-label=\"whiteCircle\">⚪</span> {this.state.whiteMinute} Min</h6>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <div className=\"progress\">\r\n                        <div className=\"progress-bar bg-info\" role=\"progressbar\" style={{width:`${this.state.whiteTime}%`}} aria-valuenow=\"50\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-2\"></div>\r\n                </div> </>}\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        <h2 className=\"text-center\">Last Move</h2>\r\n                        <p className=\"text-center\">{this.state.lastMove}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport Nav from './Nav';\r\nimport Stats from './Stats';\r\nimport reversiLogic from '../reversiLogic/reversi';\r\nimport JwtUtils from '../utils/jwtUtils';\r\nimport '../css/board.css';\r\nimport '../css/firework.css';\r\n\r\nimport { pieceVal } from './Piece';\r\n\r\nclass Game extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        JwtUtils.checkTokenPresent();\r\n        document.body.style.overflow = \"hidden\"\r\n        this.handleMoveAction = this.handleMoveAction.bind(this);\r\n        this.handleTurn = this.handleTurn.bind(this);\r\n        this.handleCount = this.handleCount.bind(this);\r\n        this.handleOpp = this.handleOpp.bind(this);\r\n        this.lastMove = this.lastMove.bind(this);\r\n        this.setWinner = this.setWinner.bind(this);\r\n        this.startTimer = this.startTimer.bind(this);\r\n        this.endTimer = this.endTimer.bind(this);\r\n        this.setTimer = this.setTimer.bind(this);\r\n        this.handleMoveStart = this.handleMoveStart.bind(this);\r\n        this.incrementRegister = this.incrementRegister.bind(this);\r\n        this.handleTimeSet = this.handleTimeSet.bind(this);\r\n\r\n        this.aiDiff = 0;\r\n        this.state = {\r\n            gameOver: false,\r\n            boardVisible: false,\r\n        };\r\n\r\n        if (this.props.location.search.length > 0){\r\n            this.aiDiff = parseInt(this.props.location.search.substr(-1));\r\n            this.aiDiff =  (isNaN(this.aiDiff) || this.aiDiff > 5) ? 1 : this.aiDiff;\r\n        }\r\n\r\n        this.reversiGame = {\r\n            reversi: new reversiLogic(),\r\n            moveAct: this.handleMoveAction,\r\n            moveStartAct: this.handleMoveStart,\r\n            setTime: this.handleTimeSet,\r\n            moveEndAct: this.handleMoveEnd,\r\n            aiDiff: this.aiDiff,\r\n        };\r\n\r\n        this.statsMan = {\r\n            turn: this.handleTurn,\r\n            count: this.handleCount,\r\n            opp: this.handleOpp,\r\n            lastMove: this.lastMove,\r\n            winner: this.setWinner,\r\n            startTime: this.startTimer,\r\n            endTime: this.endTimer,\r\n            setTime: this.setTimer,\r\n        };\r\n\r\n        this.statsRegisterCount = 0;\r\n\r\n        JwtUtils.checkTokenPresent();\r\n    }\r\n\r\n    getOppStr = (diff) => {\r\n        switch (diff){\r\n            case 0:\r\n                return \"🎎 Playing Against a Local Friend\"\r\n            case 1:\r\n                return \"🍂 The T-800\"\r\n            case 2:\r\n                return \"🌱 The T-1000\"\r\n            case 3:\r\n                return \"🌲 The T-3000\"\r\n            case 5:\r\n                let pStr = this.reversiGame.reversi.getPlayers();\r\n                if (pStr === null){\r\n                    return \"🧍 Against Someone...\"\r\n                }\r\n                return pStr;\r\n            default:\r\n                return \"WTF Something Went Wront!\"\r\n            }\r\n    }\r\n\r\n    handleMoveStart = (turn) => {\r\n        this.timerStart(turn);\r\n    }\r\n\r\n    handleMoveEnd = () => {\r\n        return this.timerEnd();\r\n    }\r\n\r\n    handleTimeSet = (blk, white) => {\r\n        this.timerSet(blk, white);\r\n    }\r\n\r\n    handleMoveAction = () =>{\r\n        let turn = this.reversiGame.reversi.getTurn();\r\n        let pieceCount = this.reversiGame.reversi.getPieceCount();\r\n\r\n        let gameOver = this.reversiGame.reversi.getOver();\r\n        let timeRemain = this.reversiGame.reversi.getTimeRemain();\r\n        \r\n        //console.log(timeRemain)\r\n        //game is over\r\n        let winner = pieceVal.EMPTY;\r\n        if (gameOver){\r\n            if (pieceCount.white < pieceCount.black){\r\n                winner = pieceVal.BLACK;\r\n            } else if(pieceCount.white > pieceCount.black ){\r\n                winner = pieceVal.WHITE;\r\n            }\r\n\r\n            //Timeout exceeds overrides pieces count\r\n            if (timeRemain.black.min <= 0 && timeRemain.black.sec){\r\n                winner = pieceVal.WHITE;\r\n            } \r\n            \r\n            if(timeRemain.white.min <= 0 && timeRemain.white.sec <= 0){\r\n                winner = pieceVal.BLACK;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            gameOver: gameOver,\r\n        });\r\n\r\n        this.setTurn(turn === pieceVal.BLACK, this.reversiGame.reversi.getMadeMoves());\r\n        let lastMove = this.reversiGame.reversi.getLastMove();\r\n        if (lastMove !== null){\r\n            this.setLastMove(lastMove);\r\n        }\r\n        this.setCount(pieceCount);\r\n        this.setOpp(this.getOppStr(this.aiDiff), this.aiDiff);\r\n        this.setGameWinner(gameOver, winner);\r\n    }\r\n\r\n    incrementRegister = () => {\r\n        this.statsRegisterCount += 1;\r\n        if (this.statsRegisterCount === 8){\r\n            this.setState({\r\n                boardVisible: true,\r\n            });\r\n        }\r\n    }\r\n\r\n    lastMove = (func)=> {\r\n        this.setLastMove = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    setWinner = (func)=> {\r\n        this.setGameWinner = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    handleTurn = (func) =>{\r\n        this.setTurn = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    handleCount = (func) =>{\r\n        this.setCount = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    startTimer = (func) =>{\r\n        this.timerStart = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    endTimer = (func) =>{\r\n        this.timerEnd = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    setTimer = (func) =>{\r\n        this.timerSet = func;\r\n        this.incrementRegister();\r\n    }\r\n\r\n    handleOpp = (func) =>{\r\n        this.setOpp = func;\r\n        this.setOpp(this.getOppStr(this.aiDiff));\r\n        this.incrementRegister();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Nav />\r\n                {this.state.gameOver && <div className=\"pyro\">\r\n                    <div className=\"before\"></div>\r\n                    <div className=\"after\"></div>\r\n                </div>}\r\n                <div className=\"container mt-4 mb-4\">\r\n                    <h1 className=\"text-center noSelect\"><span role=\"img\" aria-label=\"blackCircle\">⚫</span>Reversi Game Room<span role=\"img\" aria-label=\"whiteCircle\">⚪</span></h1>\r\n                </div>\r\n                <div className=\"container\">\r\n                    <div className = \"row\">\r\n                        {(this.state.boardVisible) &&  <Board gameDetails={this.reversiGame}/>}\r\n                        <Stats updateDetails={this.statsMan}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default Game;\r\n","import React, { Component } from 'react';\r\nimport serverComm from '../utils/serverComm.js';\r\n\r\nimport '../css/board.css';\r\n\r\nclass CreateLobbyCard extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            room: \"No Room\",\r\n            playerB: \"...\",\r\n            playerW: \"...\",\r\n            inLobby: true,\r\n            compMounted: false,\r\n            readyToStart: false,\r\n            invalidRoom: \"\",\r\n        }\r\n        this.handleJoin = this.handleJoin.bind(this);\r\n        this.handleLobbyUpdate = this.handleLobbyUpdate.bind(this);\r\n        this.handleCreate = this.handleCreate.bind(this);\r\n        this.handleLeave = this.handleLeave.bind(this);\r\n        this.handleGameStart = this.handleGameStart.bind(this);\r\n        this.runLobbyCheckLoop = this.runLobbyCheckLoop.bind(this);\r\n\r\n    }\r\n\r\n    handleGameStart = () => {\r\n        let postLocat = \"api/game/start/\"\r\n        serverComm.post({}, postLocat)\r\n        .then(result => {return result.json();})\r\n        .then((result) => {\r\n            window.location.href = \"/board?mode=5\";\r\n        })\r\n        .catch((result)=> {\r\n            console.log(result);\r\n        });        \r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({\r\n            room: \"No Room\",\r\n            playerB: \"...\",\r\n            playerW: \"...\",\r\n            inLobby: true,\r\n            compMounted: true,\r\n        });\r\n        this.handleLobbyUpdate();\r\n        // eslint-disable-next-line\r\n        this.runLobbyCheckLoop();\r\n    }\r\n\r\n    async runLobbyCheckLoop(){\r\n        this.handleLobbyUpdate();\r\n        await new Promise(r => setTimeout(r, 2500));\r\n        this.runLobbyCheckLoop();\r\n    }\r\n\r\n\r\n    setPlayers(pArr, room, me){\r\n        let pB = pArr[0].split(\"@\")[0];\r\n        let pW = (pArr.length > 1)? pArr[1].split(\"@\")[0]: \"...\";\r\n        let inLobby = false;\r\n        let readyToStart = false;\r\n        if (room !== undefined){\r\n            inLobby = true;\r\n        }\r\n\r\n        if (pArr.length >= 2 && me === pArr[0]){\r\n            readyToStart = true;\r\n        }\r\n\r\n        this.setState({\r\n            playerB: pB,\r\n            playerW: pW,\r\n            room: room,\r\n            inLobby: inLobby,\r\n            readyToStart: readyToStart,\r\n        })\r\n    }\r\n\r\n    handleLeave = (event) => {\r\n        event.preventDefault();\r\n        let postLocat = \"lobby/room/\";\r\n\r\n        let data = {\r\n            gid: this.state.room,\r\n            join: false,\r\n        };\r\n        serverComm.post(data, postLocat)\r\n        .then(result => {return result.json();})\r\n        .then((result) => {\r\n            this.resetState();\r\n            this.handleLobbyUpdate();\r\n        })\r\n        .catch((result)=> {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    handleJoin = (event) => {\r\n        event.preventDefault();\r\n        let postLocat = \"lobby/room/\";\r\n\r\n        this.setState({\r\n            invalidRoom: \"\",\r\n        });\r\n\r\n        let roomVal = document.getElementById('room').value;\r\n        let data = {\r\n            gid: roomVal,\r\n            join: true,\r\n        };\r\n\r\n        serverComm.post(data, postLocat)\r\n        .then(result =>{\r\n            if(result.status >= 200 && result.status < 300){\r\n                return result.json()\r\n            }\r\n            return Promise.reject(result.json());\r\n        })\r\n        .then((result) => {\r\n            this.handleLobbyUpdate();\r\n        })\r\n        .catch((result)=> {\r\n            this.setState({\r\n                invalidRoom: \"is-invalid\",\r\n            });\r\n        });\r\n    }\r\n\r\n    handleLobbyUpdate = () => {\r\n        let roomLocat = \"lobby/room/\";\r\n        serverComm.get(roomLocat)\r\n        .then(result =>{return result.json()})\r\n        .then((result) => {\r\n            //console.log(result)\r\n            if (Object.keys(result).length > 1){\r\n                this.setPlayers(result.users, result.room, result.you);\r\n                if(result.started){\r\n                    if (result.started.length < 2){\r\n                        if (!(result.started.includes(result.you))){\r\n                            this.handleGameStart();\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                this.resetState();\r\n            }\r\n        })\r\n        .catch((result)=> {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    resetState(){\r\n        this.setState({\r\n            playerB: \"...\",\r\n            playerW: \"...\",\r\n            room: \"None\",\r\n            inLobby: false,\r\n            readyToStart: false,\r\n        });\r\n    }\r\n\r\n    handleCreate = (event) => {\r\n        event.preventDefault();\r\n        let postLocat = \"lobby/createroom/\";\r\n        serverComm.post({}, postLocat)\r\n        .then(result =>{return result.json()})\r\n        .then((result) => {\r\n            this.handleLobbyUpdate();\r\n        })\r\n        .catch((result)=> {\r\n            console.log(result);\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\"><span role=\"img\" aria-label=\"multi\">⚔️</span> Multiplayer <span role=\"img\" aria-label=\"multi\">🛡️</span></h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Create a Room</h5>\r\n                        <p className=\"card-text\">For others to join!</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-1\"></div>\r\n                            <div className=\"col-10\">\r\n                                <button onClick={this.handleCreate}  className=\"btn btn-outline-dark w-100\" disabled={this.state.inLobby || !this.state.compMounted}>Create</button>\r\n                            </div>\r\n                            <div className=\"col-1\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-3\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Join a Room</h5>\r\n                        <p className=\"card-text\">{this.state.invalidRoom === \"\" ? \"Enter Room!\": \"Invalid Room!\"}</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-1\"></div>\r\n                            <div className=\"input-group mb-10\">\r\n                            <input type=\"text\" className={`form-control ${this.state.invalidRoom}`} id=\"room\" placeholder=\"Enter ID\" aria-label=\"opp\" aria-describedby=\"basic-addon2\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-secondary\" type=\"button\" onClick={this.handleJoin} disabled={this.state.inLobby || !this.state.compMounted}>Join Room</button>\r\n                            </div>\r\n                            </div>\r\n                            <div className=\"col-1\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-6\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">Current: {this.state.room}</h5>\r\n                        <p className=\"card-text noSelect\"><span role=\"img\" aria-label=\"blackCircle\">⚫</span> {this.state.playerB} {this.state.inLobby && <span role=\"img\" aria-label=\"crown\">(👑) </span>} Vs. <span role=\"img\" aria-label=\"whiteCircle\"> {this.state.playerW}⚪</span></p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-2\"></div>\r\n                            <div className=\"col-4\">\r\n                                <button className=\"btn btn-outline-danger w-100\" onClick={this.handleLeave} disabled={!this.state.inLobby || !this.state.compMounted}>Leave¡</button>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <button onClick={this.handleGameStart} className=\"btn btn-outline-success w-100\" disabled={!this.state.inLobby  || !this.state.readyToStart ||  !this.state.compMounted}>Start!</button>\r\n                            </div>\r\n                            <div className=\"col-2\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default CreateLobbyCard;","import React, { Component } from 'react';\r\n\r\nimport '../css/board.css';\r\n\r\nclass BasicCard extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\">{this.props.renderDetails.bigTitle}</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.props.renderDetails.smallTitle}</h5>\r\n                        <p className=\"card-text\">{this.props.renderDetails.description}</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-3\"></div>\r\n                            <div className=\"col-6\">\r\n                                <a className=\"btn btn-outline-dark w-100\" href={`${this.props.renderDetails.href}`}>{this.props.renderDetails.navMsg}</a>\r\n                            </div>\r\n                            <div className=\"col-3\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default BasicCard;","import React, { Component } from 'react';\r\n\r\nimport '../css/board.css';\r\n\r\nclass AiCard extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\">{this.props.renderDetails.bigTitle}</h5>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{this.props.renderDetails.smallTitle}</h5>\r\n                        <p className=\"card-text\">{this.props.renderDetails.description}</p>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-4\">\r\n                                <a className=\"btn btn-outline-info w-100\" href={`${this.props.renderDetails.hrefEasy}`}>{this.props.renderDetails.navMsgEasy}</a>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <a className=\"btn btn-outline-warning w-100\" href={`${this.props.renderDetails.hrefMed}`}>{this.props.renderDetails.navMsgMed}</a>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <a className=\"btn btn-outline-danger w-100\" href={`${this.props.renderDetails.hrefHard}`}>{this.props.renderDetails.navMsgHard}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default AiCard;","import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\nimport CreateLobbyCard from './CreateLobbyCard';\r\nimport BasicCard from './BasicCard';\r\nimport AiCard from './AiCard';\r\nimport JwtUtils from '../utils/jwtUtils';\r\n\r\nimport '../css/board.css';\r\nimport '../css/home.css';\r\n\r\nclass HomePage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        JwtUtils.checkTokenPresent();\r\n    }\r\n\r\n    render(){\r\n        let aiRenderDetails = {\r\n            bigTitle: \"1️⃣ Single Player\",\r\n            smallTitle: \"🤖 Against the Bot.\",\r\n            description: \"Play reversi against a computer player.\",\r\n            hrefEasy: \"/board?mode=1\",\r\n            navMsgEasy: \"🍂 EZ\",\r\n            hrefMed: \"/board?mode=2\",\r\n            navMsgMed: \"🌱 Okay\",\r\n            hrefHard: \"/board?mode=3\",\r\n            navMsgHard: \"🌲 !!!!\",\r\n        };\r\n\r\n        let twoPlayerRenderDetails = {\r\n            bigTitle: \"2️⃣ Offline Multiplayer\",\r\n            smallTitle: \"🎎 Against a friend.\",\r\n            description: \"Play reversi against someone sitting next to you.\",\r\n            href: \"/board?mode=0\",\r\n            navMsg: \"Get Started!\",\r\n        };\r\n\r\n        let ruleDetails = {\r\n            bigTitle: \"📖 Reversi Rules\",\r\n            smallTitle: \"\",\r\n            description: \"Read up on game rules.\",\r\n            href: \"/rules\",\r\n            navMsg: \"Read~\",\r\n        };\r\n\r\n        let accountDetails = {\r\n            bigTitle: \"⚙️ Account Management\",\r\n            smallTitle: \"\",\r\n            description: \"Make changes to your account.\",\r\n            href: \"/account\",\r\n            navMsg: \"Edits~\",\r\n        };\r\n\r\n        let aboutDetails = {\r\n            bigTitle: \"📇 Contact Us\",\r\n            smallTitle: \"\",\r\n            description: \"See any bugs? Contact us!\",\r\n            href: \"/about\",\r\n            navMsg: \"Contact~\",\r\n        };\r\n        return (\r\n            <div>           \r\n                <Nav />\r\n                <div className=\"container mt-1\">\r\n                        <div className=\"row mt-4 fade-in to-be-animated\" style={{animationDelay: \"1s\"}}>\r\n                            <div className=\"col-12\">\r\n                                <CreateLobbyCard />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                            <div className=\"col-6\">\r\n                                <AiCard renderDetails={aiRenderDetails} />\r\n                            </div>\r\n                            <div className=\"col-6\">\r\n                                <BasicCard renderDetails={twoPlayerRenderDetails} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row mt-4 fade-in to-be-animated\">\r\n                            <div className=\"col-4\">\r\n                                <BasicCard renderDetails={ruleDetails} />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <BasicCard renderDetails={accountDetails} />\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                                <BasicCard renderDetails={aboutDetails} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\n\r\nclass Rules extends Component {\r\n    render(){\r\n      return (\r\n          <div>\r\n            <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}><span role=\"img\" aria-label=\"basic\">📖</span> Basic Rules</h3>\r\n            <ul className=\"list-group list-group-flush fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}>\r\n                <li className=\"list-group-item\">The game is played on a 8x8 board</li>\r\n                <li className=\"list-group-item\">Alternating initial pieces are allocated in the 4 center spaces</li>\r\n                <li className=\"list-group-item\">Place flanking pieces to capture all vertically, horizontally and diagnally flanked pieces</li>\r\n                <li className=\"list-group-item\">A move must be placed on an empty square and must capture atleast 1 opposing piece</li>\r\n                <li className=\"list-group-item\">When there are no valid moves remaining, the color with the most pieces wins</li>\r\n                <li className=\"list-group-item\">There is a 30 minute limit for multi-player lobbies</li>\r\n            </ul>\r\n            <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}><span role=\"img\" aria-label=\"special\">🔖</span> Special Rules</h3>\r\n            <ul className=\"list-group list-group-flush fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                <li className=\"list-group-item\">Black piece plays the first move</li>\r\n                <li className=\"list-group-item\">If a played has no valid moves, the other player will gain an additional turn</li>\r\n            </ul>\r\n            <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.75s\"}}><span role=\"img\" aria-label=\"ai\">🤖</span> AI Notes</h3>\r\n            <ul className=\"list-group list-group-flush fade-in to-be-animated\" style={{animationDelay: \"0.75s\"}}>\r\n                <li className=\"list-group-item\">When playing the AI, the player gets to go first</li>\r\n                <li className=\"list-group-item\">There is no time limit for AI games</li>\r\n                <li className=\"list-group-item\"><i><span role=\"img\" aria-label=\"ez\">🍂</span> EZ</i> AI will make a random move</li>\r\n                <li className=\"list-group-item\"><i><span role=\"img\" aria-label=\"ok\">🌱</span> Okay AI</i> will make the best current move</li>\r\n                <li className=\"list-group-item\"><i><span role=\"img\" aria-label=\"hard\">🌲</span> !!!</i> AI will make the best move, forecasting 4 turns in advance</li>\r\n            </ul>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default Rules","import React, { Component } from 'react';\r\nimport Rules from \"./Rules\"\r\nimport Nav from \"./Nav\"\r\nimport JwtUtils from '../utils/jwtUtils';\r\n\r\nclass RulesPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        JwtUtils.checkTokenPresent();\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"container\">\r\n                <Rules />\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default RulesPage;","import React, { Component } from 'react';\r\n\r\nclass AuthorCard extends Component {\r\n    render(){\r\n      return (\r\n          <div className=\"col-6\">\r\n            <div className=\"card mb-3\">\r\n              <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                  <img src={`${this.props.renderDetails.imgUrl}`} className=\"card-img\" alt=\"...\" />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{this.props.renderDetails.firstName} {this.props.renderDetails.lastName}</h5>\r\n                    <p className=\"card-text\">Contact {this.props.renderDetails.firstName} via<i\r\n                        className=\"fa fa-mail\"></i> <a href={`${this.props.renderDetails.email}`}>E-mail</a> or <a\r\n                        href={`${this.props.renderDetails.linkedInUrl}`} target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>.</p>\r\n                    <div className=\"text-right\">\r\n                      {(this.props.renderDetails.gitUrl.length !== 0) && <a href={`${this.props.renderDetails.gitUrl}`} rel=\"noopener noreferrer\" target=\"_blank\" className=\"btn btn-outline-dark\">Github</a>}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default AuthorCard","import React, { Component } from 'react';\r\nimport AuthorCard from './AuthorCard';\r\nimport Nav from \"./Nav\"\r\nimport JwtUtils from '../utils/jwtUtils';\r\n\r\nclass AboutPage extends Component {\r\n  constructor(props){\r\n    super(props)\r\n    JwtUtils.checkTokenPresent();\r\n  }\r\n\r\n    render(){\r\n      let jeremy = {\r\n        firstName: \"Jeremy\",\r\n        lastName:\"Q.\",\r\n        linkedInUrl: \"https://www.linkedin.com/in/jeremy-qian/\",\r\n        gitUrl: \"https://github.com/jeremyqzt\",\r\n        email: \"mailto:jq357@hotmail.com\",\r\n        imgUrl: \"https://avatars3.githubusercontent.com/u/6643065?s=400&v=4\",\r\n      };\r\n      let ben = {\r\n        firstName: \"Ben\",\r\n        lastName:\"N.\",\r\n        linkedInUrl: \"https://www.linkedin.com/in/ben-ni-98761862/\",\r\n        gitUrl: \"https://github.com/benbennza1\",\r\n        email: \"mailto:nizhangan123@hotmail.com\",\r\n        imgUrl: \"https://avatars3.githubusercontent.com/u/8797475?s=400&u=2503bce7af39559e19574963188ec2644ca92d85&v=4\",\r\n      };\r\n      let yanqi = {\r\n        firstName: \"Yanqi\",\r\n        lastName:\"L.\",\r\n        linkedInUrl: \"https://www.linkedin.com/in/yanqilee/\",\r\n        gitUrl: \"https://github.com/yanqilee\",\r\n        email: \"mailto:yanqilee@hotmail.com\",\r\n        imgUrl: \"https://avatars0.githubusercontent.com/u/8241930?s=400&u=fd10ebb904055e240145a9082f6bc3dd410af874&v=4\",\r\n      };\r\n      let loob = {\r\n        firstName: \"Louis\",\r\n        lastName:\"L.\",\r\n        linkedInUrl: \"https://www.linkedin.com/in/louis-la-osh/\",\r\n        gitUrl: \"\",\r\n        email: \"lsg000@outlook.com\",\r\n        imgUrl: \"https://media-exp1.licdn.com/dms/image/C5603AQGv16IfxKedeA/profile-displayphoto-shrink_800_800/0?e=1600300800&v=beta&t=cD8W1zLgptTEOT1lNZbqHkC3eIjjsDnHtQ65i5h7BQs\",\r\n      };\r\n      return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"container\">\r\n              <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}><span role=\"img\" aria-label=\"aboot\">🧭</span> About This Site</h3>\r\n              <div className=\"row fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}>\r\n                <div className=\"col-12\">\r\n                  <p className=\"text-left\">This website is made as a hobby project.\r\n                  The code is completely available at our <a href=\"https://github.com/jeremyqzt/reversi\" rel=\"noopener noreferrer\" target=\"_blank\" >Github</a>. \r\n                  The frontend is coded in ReactJS, backend is Django and there are 3 NodeJS based in-memory databases for storing the game states.\r\n                  </p>\r\n                  <p className=\"text-left\"> AI Games and LAN games are completely implemented using frontend JavaScript. Multiplayer games submit moves to the server\r\n                  and the servers check the moves by maintaining its own internal game - this implies that the server is playing the same game as the client and\r\n                  the client always sends synchronization requests. We are unsure if this works 100% but are fairly confident, if there is a flaw, please fix it for \r\n                  us or tell us about it!\r\n                  </p>\r\n                  <p className=\"text-left\">If there are other bugs, please also feel free to either fix it yourself or contact one of the authors.</p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                  <span role=\"img\" aria-label=\"factory\">🏭</span> Bug Manufacturers\r\n                </h3>\r\n                <div className=\"row fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                    <AuthorCard renderDetails={jeremy} />\r\n                    <AuthorCard renderDetails={ben} />\r\n                </div>\r\n                <div className=\"row fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                    <AuthorCard renderDetails={yanqi} />\r\n                    <AuthorCard renderDetails={loob} />\r\n                </div>\r\n              <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"1s\"}}><span role=\"img\" aria-label=\"zound\">🔈</span> Sound Credits</h3>\r\n              <div className=\"row fade-in to-be-animated\" style={{animationDelay: \"1s\"}}>\r\n                <div className=\"col-12\">\r\n                  <p className=\"text-left\">Checker Board Sound <a href=\"https://freesound.org/people/mh2o/sounds/351518/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a> Under CC0 1.0 License <a href=\"https://creativecommons.org/publicdomain/zero/1.0/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a></p>\r\n                  <p className=\"text-left\">Error Sound <a href=\"https://freesound.org/s/142608/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a> Under CC BY 3.0 License <a href=\"https://creativecommons.org/licenses/by/3.0/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a></p>\r\n                  <p className=\"text-left\">Click Sound <a href=\"https://freesound.org/people/cabled_mess/sounds/370962/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a> Under CC0 1.0 License <a href=\"https://creativecommons.org/publicdomain/zero/1.0/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a></p>\r\n                  <p className=\"text-left\">Beep Sound <a href=\"https://freesound.org/people/janhgm/sounds/237990/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a> Under CC BY 3.0 License <a href=\"https://creativecommons.org/licenses/by/3.0/\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a></p>\r\n                </div>\r\n              </div>\r\n              <h3 className=\"mt-4 fade-in to-be-animated\" style={{animationDelay: \"1s\"}}><span role=\"img\" aria-label=\"cod\">📇</span> Coding Credits</h3>\r\n              <div className=\"row fade-in to-be-animated\" style={{animationDelay: \"1s\"}}>\r\n                <div className=\"col-12\">\r\n                  <p className=\"text-left\">The Following Tutorial Was Used To Create the Authentication API On This Website <a href=\"https://hackernoon.com/110percent-complete-jwt-authentication-with-django-and-react-2020-iejq34ta\" rel=\"noopener noreferrer\" target=\"_blank\" >(Link)</a></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default AboutPage;\r\n","import React, { Component } from 'react';\r\n\r\nimport '../css/board.css';\r\n\r\nclass AccountPrivacyCard extends Component {\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\"><span role=\"img\" aria-label=\"priv\">🕵️‍</span> Privacy Statement <span role=\"img\" aria-label=\"priv\">🕵️‍♀️</span> </h5>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">We promise to never</h5>\r\n                    <p className=\"card-text\">\r\n                        Share your E-mail with anyone else<br />\r\n                        Send you any E-mail - your E-mail is only ever used as a username<br />\r\n                        Track you in any way - the only cookie is used for your authentication<br />\r\n                    </p>\r\n                    <h5 className=\"card-title\">You can choose to</h5>\r\n                    <p className=\"card-text\">\r\n                        Permanently delete your account from our servers - all related data is removed instantly\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default AccountPrivacyCard;\r\n","import React, { Component } from 'react';\r\nimport '../css/board.css';\r\nimport '../css/alerts.css';\r\nimport serverComm from '../utils/serverComm.js';\r\nimport JwtUtils from '../utils/jwtUtils.js';\r\nimport beepSound from '../sound/beep.wav';\r\n\r\nclass DeleteAccountCard extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.showAlert = this.showAlert.bind(this);\r\n        this.hideAlert = this.hideAlert.bind(this);\r\n        this.showSucc = this.showSucc.bind(this);\r\n        this.goHome = this.goHome.bind(this);\r\n        this.placeBeepSound = this.placeBeepSound.bind(this);\r\n\r\n        this.state = {\r\n            value: \"\",\r\n            show: false,\r\n            errMsg: \"\",\r\n        }\r\n    }\r\n\r\n    handleDelete = () =>{\r\n        let deleteMe = this.state.value.trim();\r\n        let postLocat = \"auth/user/delete/\"\r\n        if (deleteMe === \"DELETE ACCOUNT\"){\r\n            serverComm.delete({}, postLocat)\r\n            .then((result) => {\r\n                if (result.status >= 200 && result.status < 300){\r\n                    return result.json();\r\n                }\r\n                return Promise.reject(result.json());\r\n            }).then((result) => {\r\n                this.showSucc();\r\n                JwtUtils.deleteToken();\r\n                this.goHome();\r\n            }).catch((result) => {\r\n                result.then((result) => {\r\n                    this.showAlert(\"Deletion Failed, Please Try Again Later.\");\r\n                })\r\n            });\r\n        } else {\r\n            this.showAlert(\"Please double check that 'DELETE ACCOUNT' was entered correctly.\");\r\n        }\r\n    }\r\n\r\n    placeBeepSound =()=>{\r\n        var beep = new Audio (beepSound);\r\n        beep.play();\r\n    }\r\n\r\n    async goHome() {\r\n        for (let i = 0; i < 3; i++){\r\n            this.placeBeepSound();\r\n            await new Promise(r => setTimeout(r, 1000));\r\n        }\r\n        window.location.href = '/';\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({value: event.target.value});\r\n    }\r\n\r\n    showSucc = () => {\r\n        this.setState(\r\n            {\r\n                value: \"\",\r\n                show: false,\r\n                doneShow: true,\r\n            }\r\n        );    \r\n    }\r\n\r\n    hideAlert = () =>{\r\n        this.setState(\r\n            {\r\n                value: \"\",\r\n                show: false,\r\n                doneShow: false,\r\n            }\r\n        );\r\n    }\r\n\r\n    showAlert = (msg) =>{\r\n        this.setState(\r\n            {\r\n                errMsg: msg,\r\n                show: true,\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\"><span role=\"img\" aria-label=\"del\">❌‍</span> Delete Your Account <span role=\"img\" aria-label=\"del\">❌‍</span></h5>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Permeanently Delete Your Account</h5>\r\n                    <p className=\"card-text\">\r\n                        Enter <i><strong>DELETE ACCOUNT</strong></i> below and click the delete button.\r\n                    </p>\r\n                    <div className = \"row\">\r\n                        <div className=\"col-1\"></div>\r\n                            <div className=\"input-group mb-10 col-10\">\r\n                            <input type=\"text\" className=\"form-control\" id=\"verify\" value={this.state.value} onChange={this.handleChange} placeholder=\"Enter 'DELETE ACCOUNT' Here\" aria-label=\"remove\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-danger\" onClick={this.handleDelete} type=\"button\">Delete</button>\r\n                            </div>\r\n                            </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    {this.state.show &&\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"alert col-10\">\r\n                            <span className=\"closebtn\" onClick={this.hideAlert}>&times;</span> \r\n                            <strong>Error!</strong> {this.state.errMsg}\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    }\r\n                    {this.state.doneShow &&\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"alert-success col-10\">\r\n                            <span className=\"closebtn\" onClick={this.hideAlert}>&times;</span> \r\n                            <strong>Success!</strong> Account Deleted, You Will be Redirected in 3 Seconds.\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default DeleteAccountCard;\r\n","import React, { Component } from 'react';\r\nimport '../css/board.css';\r\nimport '../css/alerts.css';\r\nimport serverComm from '../utils/serverComm.js';\r\n\r\nclass ChangePassword extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.handlePassChange = this.handlePassChange.bind(this);\r\n        this.showErr = this.showErr.bind(this);\r\n        this.showSucc = this.showSucc.bind(this);\r\n        this.hideBoth = this.hideBoth.bind(this);\r\n        this.resetFields = this.resetFields.bind(this);\r\n\r\n        this.state = {\r\n            oldP: \"\",\r\n            errMsg: \"\",\r\n            newP1: \"\",\r\n            newP2: \"\",\r\n            showErr: false,\r\n            showSucc: false,\r\n\r\n        }\r\n    }\r\n\r\n    handlePassChange = () =>{\r\n        if (this.state.newP1 !== this.state.newP2) { //|| || this.state.oldP.length < 8){\r\n            this.showErr(\"New Password Mismatch!\");\r\n        } else if (this.state.newP1.length < 8 ){\r\n            this.showErr(\"New Password Must Must Be Atleast 8 Characters Long!\");\r\n        } else if (this.state.oldP.length < 8){\r\n            this.showErr(\"Old Password is Incorrect!\");\r\n        } else {\r\n            let data = {\r\n                password: this.state.newP1,\r\n                oldP: this.state.oldP,\r\n            }\r\n            let postLocat = \"auth/user/update/\"\r\n            serverComm.put(data, postLocat).then((resp) => {\r\n                if (resp.status >= 200 && resp.status < 300){\r\n                    return resp.json();\r\n                }\r\n                return Promise.reject(resp.json())\r\n            }).then((resp) => {\r\n                this.showSucc();\r\n                this.resetFields();\r\n            }).catch((resp) => {\r\n                resp.then((resp) => {\r\n                    this.showErr(resp.detail);\r\n                    this.resetFields();\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState(\r\n            {\r\n                [event.target.id]: event.target.value,\r\n            }\r\n        );\r\n    }\r\n\r\n    showErr = (msg) =>{\r\n        this.setState(\r\n            {\r\n                errMsg: msg,\r\n                showSucc: false,\r\n                showErr: true,\r\n            }\r\n        );\r\n    }\r\n\r\n    showSucc = () =>{\r\n        this.setState(\r\n            {\r\n                showSucc: true,\r\n                showErr: false,\r\n            }\r\n        );\r\n    }\r\n\r\n    hideBoth = () =>{\r\n        this.setState(\r\n            {\r\n                showSucc: false,\r\n                showErr: false,\r\n            }\r\n        );\r\n    }\r\n\r\n    resetFields = () => {\r\n        this.setState(\r\n            {\r\n                oldP: \"\",\r\n                newP1: \"\",\r\n                newP2: \"\",\r\n            }\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"card text-center h-100\">\r\n            <h5 className=\"card-header bg-dark text-light noSelect\"><span role=\"img\" aria-label=\"key\">🔑‍</span> Change Password <span role=\"img\" aria-label=\"key\">🔑</span></h5>\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Enter Old and New Passwords Below</h5>\r\n                    <p className=\"card-text\">\r\n                        Select the change button once complete.\r\n                    </p>\r\n                    <div className = \"row\">\r\n                    <div className=\"input-group mb-10 col-4\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"oldP\" value={this.state.oldP} onChange={this.handleChange} placeholder=\"Old Password\" aria-label=\"remove\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-10 col-4\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"newP1\" value={this.state.newP1} onChange={this.handleChange} placeholder=\"New Password\" aria-label=\"remove\" />\r\n                            </div>\r\n                            <div className=\"input-group mb-10 col-4\">\r\n                            <input type=\"password\" className=\"form-control\" id=\"newP2\" value={this.state.newP2} onChange={this.handleChange} placeholder=\"Re-enter New Password\" aria-label=\"remove\" />\r\n                            <div className=\"input-group-append\">\r\n                                <button className=\"btn btn-outline-dark\" onClick={this.handlePassChange} type=\"button\">Change</button>\r\n                            </div>\r\n                            </div>\r\n                    </div>\r\n                    {this.state.showErr &&\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"alert col-10\">\r\n                            <span className=\"closebtn\" onClick={this.hideBoth}>&times;</span> \r\n                            <strong>Error!</strong> {this.state.errMsg}\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    }\r\n                    {this.state.showSucc &&\r\n                    <div className=\"row mt-3\">\r\n                        <div className=\"col-1\"></div>\r\n                        <div className=\"alert-success col-10\">\r\n                            <span className=\"closebtn\" onClick={this.hideBoth}>&times;</span> \r\n                            <strong>Success!</strong> You Password has been changed!\r\n                        </div>\r\n                        <div className=\"col-1\"></div>\r\n                    </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default ChangePassword;\r\n","import React, { Component } from 'react';\r\nimport Nav from './Nav';\r\nimport AccountPrivacyCard from './AccountsPrivacyCard';\r\nimport JwtUtils from '../utils/jwtUtils';\r\nimport DeleteAccountCard from './DeleteAccountCard';\r\nimport ChangePassword from './ChangePasswordCard';\r\n\r\nimport '../css/board.css';\r\nimport '../css/home.css';\r\n\r\nclass AccountsPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        JwtUtils.checkTokenPresent();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>           \r\n                <Nav />\r\n                <div className=\"container mt-1 mb-3\">\r\n                    <div className=\"row mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}>\r\n                        <div className=\"col-12 mt-1\">\r\n                            <ChangePassword />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.5s\"}}>\r\n                        <div className=\"col-12 mt-1\">\r\n                            <DeleteAccountCard />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row mt-4 fade-in to-be-animated\" style={{animationDelay: \"0.75s\"}}>\r\n                        <div className=\"col-12 mt-1\">\r\n                            <AccountPrivacyCard />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n      };\r\n}\r\n\r\nexport default AccountsPage;\r\n","import React, { Component } from 'react';\r\nimport '../css/board.css';\r\nimport '../css/landing.css';\r\n\r\nclass LandingPage extends Component {\r\n    render(){\r\n      return (\r\n        <div className=\"reversiColors\">\r\n            <div className=\"d-flex fullScreen\">\r\n                <div className=\"justify-content-center center text-center\">\r\n                    <h1 className=\"noSelect reversiHeader big\">Reversi</h1>\r\n                    <a href=\"/login\" role=\"button\" className=\"btn btn-primary\" style={{color: \"lavender\", backgroundColor: \"#505160\", borderColor: \"lavender\"}}>Get Started</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default LandingPage","import React, { Component } from 'react';\r\nimport Nav from \"./Nav\"\r\nimport serverComm from '../utils/serverComm.js';\r\nimport '../css/board.css';\r\n\r\nclass Page404 extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.checkJWTToken();   \r\n    }\r\n\r\n    checkJWTToken = () => {\r\n        let postLocat = \"auth/check/\";\r\n        serverComm.get(postLocat)\r\n        .then((result) => {\r\n          if (result.status === 200){\r\n            this.goHome();\r\n          } else {\r\n            window.location.href = '/login';\r\n          }\r\n        });\r\n    }\r\n\r\n    async goHome(){\r\n        await new Promise(r => setTimeout(r, 5000));\r\n        window.location.href = '/home';\r\n    }\r\n\r\n    render(){\r\n      return (\r\n        <div>\r\n            <Nav />\r\n            <div className=\"container fade-in to-be-animated\" style={{animationDelay: \"0.25s\"}}>\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-12 mt-5\">\r\n                        <h1 className=\"display-1 text-center noSelect boldTheme text-dark\"><span role=\"img\" aria-label=\"stop\">🛑</span></h1>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h1 className=\"display-1 text-center noSelect boldTheme text-dark\">404 Not Found!</h1>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h4 className=\"display-5 text-center noSelect text-dark\">Opps, we couldn't find that page!</h4>\r\n                    </div>\r\n                    <div className=\"col-12\">\r\n                        <h4 className=\"display-5 text-center noSelect text-dark\">Redirecting you shortly...</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    };\r\n  }\r\n\r\nexport default Page404;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport LoginPage from './components/LoginPage';\nimport GamePage from './components/GamePage';\nimport HomePage from './components/HomePage';\nimport RulesPage from './components/RulesPage';\nimport AboutPage from './components/AboutPage';\nimport AccountPage from './components/AccountPage';\nimport LandingPage from './components/LandingPage';\nimport Page404 from './components/404Page';\n\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport './css/main.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Switch>\n        <Route exact path=\"/board\" component={GamePage} />\n        <Route exact path=\"/home\" component={HomePage} />\n        <Route exact path=\"/rules\" component={RulesPage} />\n        <Route exact path=\"/about\" component={AboutPage} />\n        <Route exact path=\"/account\" component={AccountPage} />\n        <Route exact path=\"/login\" component={LoginPage} />\n        <Route exact path=\"/\" component={LandingPage} />\n        <Route component={Page404} />\n      </Switch>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}